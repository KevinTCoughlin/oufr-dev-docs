### YamlMime:UniversalReference
items:
  - uid: '@uifabric/date-time!ICalendarProps:interface'
    name: ICalendarProps
    fullName: ICalendarProps
    langs:
      - typeScript
    type: interface
    extends:
      - 'IBaseProps<ICalendar> '
    package: '@uifabric/date-time!'
    children:
      - '@uifabric/date-time!ICalendarProps#allFocusable:member'
      - '@uifabric/date-time!ICalendarProps#calendarDayProps:member'
      - '@uifabric/date-time!ICalendarProps#calendarMonthProps:member'
      - '@uifabric/date-time!ICalendarProps#className:member'
      - '@uifabric/date-time!ICalendarProps#componentRef:member'
      - '@uifabric/date-time!ICalendarProps#dateRangeType:member'
      - '@uifabric/date-time!ICalendarProps#dateTimeFormatter:member'
      - '@uifabric/date-time!ICalendarProps#firstDayOfWeek:member'
      - '@uifabric/date-time!ICalendarProps#firstWeekOfYear:member'
      - '@uifabric/date-time!ICalendarProps#highlightCurrentMonth:member'
      - '@uifabric/date-time!ICalendarProps#highlightSelectedMonth:member'
      - '@uifabric/date-time!ICalendarProps#isDayPickerVisible:member'
      - '@uifabric/date-time!ICalendarProps#isMonthPickerVisible:member'
      - '@uifabric/date-time!ICalendarProps#maxDate:member'
      - '@uifabric/date-time!ICalendarProps#minDate:member'
      - '@uifabric/date-time!ICalendarProps#navigationIcons:member'
      - '@uifabric/date-time!ICalendarProps#onDismiss:member'
      - '@uifabric/date-time!ICalendarProps#onSelectDate:member'
      - '@uifabric/date-time!ICalendarProps#restrictedDates:member'
      - '@uifabric/date-time!ICalendarProps#showCloseButton:member'
      - '@uifabric/date-time!ICalendarProps#showGoToToday:member'
      - '@uifabric/date-time!ICalendarProps#showMonthPickerAsOverlay:member'
      - '@uifabric/date-time!ICalendarProps#showSixWeeksByDefault:member'
      - '@uifabric/date-time!ICalendarProps#showWeekNumbers:member'
      - '@uifabric/date-time!ICalendarProps#strings:member'
      - '@uifabric/date-time!ICalendarProps#styles:member'
      - '@uifabric/date-time!ICalendarProps#theme:member'
      - '@uifabric/date-time!ICalendarProps#today:member'
      - '@uifabric/date-time!ICalendarProps#value:member'
      - '@uifabric/date-time!ICalendarProps#workWeekDays:member'
  - uid: '@uifabric/date-time!ICalendarProps#allFocusable:member'
    summary: 'Allows all dates and buttons to be focused, including disabled ones'
    name: allFocusable
    fullName: allFocusable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'allFocusable?: boolean;'
      return:
        type:
          - boolean
  - uid: '@uifabric/date-time!ICalendarProps#calendarDayProps:member'
    summary: Customized props for the calendar day
    name: calendarDayProps
    fullName: calendarDayProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calendarDayProps?: Partial<ICalendarDayProps>;'
      return:
        type:
          - Partial<ICalendarDayProps>
  - uid: '@uifabric/date-time!ICalendarProps#calendarMonthProps:member'
    summary: Customized props for the calendar month
    name: calendarMonthProps
    fullName: calendarMonthProps
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calendarMonthProps?: Partial<ICalendarMonthProps>;'
      return:
        type:
          - Partial<ICalendarMonthProps>
  - uid: '@uifabric/date-time!ICalendarProps#className:member'
    summary: Optional class name to add to the root element.
    name: className
    fullName: className
    langs:
      - typeScript
    type: property
    syntax:
      content: 'className?: string;'
      return:
        type:
          - string
  - uid: '@uifabric/date-time!ICalendarProps#componentRef:member'
    summary: >-
      Optional callback to access the ICalendar interface. Use this instead of ref for accessing the public methods and
      properties of the component.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<ICalendar>;'
      return:
        type:
          - IRefObject<ICalendar>
  - uid: '@uifabric/date-time!ICalendarProps#dateRangeType:member'
    summary: The date range type indicating how many days should be selected as the user selects days
    name: dateRangeType
    fullName: dateRangeType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dateRangeType?: DateRangeType;'
      return:
        type:
          - 'office-ui-fabric-react!DateRangeType:enum'
  - uid: '@uifabric/date-time!ICalendarProps#dateTimeFormatter:member'
    summary: 'Apply additional formating to dates, for example localized date formatting.'
    name: dateTimeFormatter
    fullName: dateTimeFormatter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dateTimeFormatter?: ICalendarFormatDateCallbacks;'
      return:
        type:
          - ICalendarFormatDateCallbacks
  - uid: '@uifabric/date-time!ICalendarProps#firstDayOfWeek:member'
    summary: The first day of the week for your locale.
    name: firstDayOfWeek
    fullName: firstDayOfWeek
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstDayOfWeek?: DayOfWeek;'
      return:
        type:
          - 'office-ui-fabric-react!DayOfWeek:enum'
  - uid: '@uifabric/date-time!ICalendarProps#firstWeekOfYear:member'
    summary: >-
      Defines when the first week of the year should start, FirstWeekOfYear.FirstDay, FirstWeekOfYear.FirstFullWeek or
      FirstWeekOfYear.FirstFourDayWeek are the possible values
    name: firstWeekOfYear
    fullName: firstWeekOfYear
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstWeekOfYear?: FirstWeekOfYear;'
      return:
        type:
          - 'office-ui-fabric-react!FirstWeekOfYear:enum'
  - uid: '@uifabric/date-time!ICalendarProps#highlightCurrentMonth:member'
    summary: Whether the month picker should highlight the current month
    name: highlightCurrentMonth
    fullName: highlightCurrentMonth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightCurrentMonth?: boolean;'
      return:
        type:
          - boolean
  - uid: '@uifabric/date-time!ICalendarProps#highlightSelectedMonth:member'
    summary: Whether the month picker should highlight the selected month
    name: highlightSelectedMonth
    fullName: highlightSelectedMonth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightSelectedMonth?: boolean;'
      return:
        type:
          - boolean
  - uid: '@uifabric/date-time!ICalendarProps#isDayPickerVisible:member'
    summary: Whether the day picker is shown beside the month picker or hidden.
    name: isDayPickerVisible
    fullName: isDayPickerVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isDayPickerVisible?: boolean;'
      return:
        type:
          - boolean
  - uid: '@uifabric/date-time!ICalendarProps#isMonthPickerVisible:member'
    summary: Whether the month picker is shown beside the day picker or hidden.
    name: isMonthPickerVisible
    fullName: isMonthPickerVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isMonthPickerVisible?: boolean;'
      return:
        type:
          - boolean
  - uid: '@uifabric/date-time!ICalendarProps#maxDate:member'
    summary: If set the Calendar will not allow navigation to or selection of a date later than this value.
    name: maxDate
    fullName: maxDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxDate?: Date;'
      return:
        type:
          - Date
  - uid: '@uifabric/date-time!ICalendarProps#minDate:member'
    summary: If set the Calendar will not allow navigation to or selection of a date earlier than this value.
    name: minDate
    fullName: minDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minDate?: Date;'
      return:
        type:
          - Date
  - uid: '@uifabric/date-time!ICalendarProps#navigationIcons:member'
    summary: Customize navigation icons using ICalendarIconStrings
    name: navigationIcons
    fullName: navigationIcons
    langs:
      - typeScript
    type: property
    syntax:
      content: 'navigationIcons?: ICalendarIconStrings;'
      return:
        type:
          - ICalendarIconStrings
  - uid: '@uifabric/date-time!ICalendarProps#onDismiss:member'
    summary: Callback issued when calendar is closed
    name: onDismiss
    fullName: onDismiss
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onDismiss?: () => void;'
      return:
        type:
          - () => void
  - uid: '@uifabric/date-time!ICalendarProps#onSelectDate:member'
    summary: Callback issued when a date is selected
    name: onSelectDate
    fullName: onSelectDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onSelectDate?: (date: Date, selectedDateRangeArray?: Date[]) => void;'
      return:
        type:
          - '(date: Date, selectedDateRangeArray?: Date[]) => void'
  - uid: '@uifabric/date-time!ICalendarProps#restrictedDates:member'
    summary: If set the Calendar will not allow selection of dates in this array.
    name: restrictedDates
    fullName: restrictedDates
    langs:
      - typeScript
    type: property
    syntax:
      content: 'restrictedDates?: Date[];'
      return:
        type:
          - 'Date[]'
  - uid: '@uifabric/date-time!ICalendarProps#showCloseButton:member'
    summary: Whether the close button should be shown or not
    name: showCloseButton
    fullName: showCloseButton
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showCloseButton?: boolean;'
      return:
        type:
          - boolean
  - uid: '@uifabric/date-time!ICalendarProps#showGoToToday:member'
    summary: Whether the "Go to today" link should be shown or not
    name: showGoToToday
    fullName: showGoToToday
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showGoToToday?: boolean;'
      return:
        type:
          - boolean
  - uid: '@uifabric/date-time!ICalendarProps#showMonthPickerAsOverlay:member'
    summary: Show month picker on top of date picker when visible.
    name: showMonthPickerAsOverlay
    fullName: showMonthPickerAsOverlay
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showMonthPickerAsOverlay?: boolean;'
      return:
        type:
          - boolean
  - uid: '@uifabric/date-time!ICalendarProps#showSixWeeksByDefault:member'
    summary: Whether the calendar should show 6 weeks by default.
    name: showSixWeeksByDefault
    fullName: showSixWeeksByDefault
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showSixWeeksByDefault?: boolean;'
      return:
        type:
          - boolean
  - uid: '@uifabric/date-time!ICalendarProps#showWeekNumbers:member'
    summary: Whether the calendar should show the week number (weeks 1 to 53) before each week row
    name: showWeekNumbers
    fullName: showWeekNumbers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showWeekNumbers?: boolean;'
      return:
        type:
          - boolean
  - uid: '@uifabric/date-time!ICalendarProps#strings:member'
    summary: Localized strings to use in the Calendar
    name: strings
    fullName: strings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'strings?: ICalendarStrings;'
      return:
        type:
          - ICalendarStrings
  - uid: '@uifabric/date-time!ICalendarProps#styles:member'
    summary: Customized styles for the calendar component
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ICalendarStyleProps, ICalendarStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<ICalendarStyleProps, ICalendarStyles>'
  - uid: '@uifabric/date-time!ICalendarProps#theme:member'
    summary: Theme provided by High-Order Component.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@uifabric/styling!ITheme:interface'
  - uid: '@uifabric/date-time!ICalendarProps#today:member'
    summary: 'Value of today. If null, current time in client machine will be used.'
    name: today
    fullName: today
    langs:
      - typeScript
    type: property
    syntax:
      content: 'today?: Date;'
      return:
        type:
          - Date
  - uid: '@uifabric/date-time!ICalendarProps#value:member'
    summary: 'Default value of the Calendar, if any'
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value?: Date;'
      return:
        type:
          - Date
  - uid: '@uifabric/date-time!ICalendarProps#workWeekDays:member'
    summary: >-
      The days that are selectable when dateRangeType is WorkWeek. If dateRangeType is not WorkWeek this property does
      nothing.
    name: workWeekDays
    fullName: workWeekDays
    langs:
      - typeScript
    type: property
    syntax:
      content: 'workWeekDays?: DayOfWeek[];'
      return:
        type:
          - 'DayOfWeek[]'
