### YamlMime:UniversalReference
items:
  - uid: 'office-ui-fabric-react!IGridProps:interface'
    name: IGridProps
    fullName: IGridProps
    langs:
      - typeScript
    type: interface
    package: office-ui-fabric-react!
    children:
      - 'office-ui-fabric-react!IGridProps#columnCount:member'
      - 'office-ui-fabric-react!IGridProps#componentRef:member'
      - 'office-ui-fabric-react!IGridProps#containerClassName:member'
      - 'office-ui-fabric-react!IGridProps#doNotContainWithinFocusZone:member'
      - 'office-ui-fabric-react!IGridProps#items:member'
      - 'office-ui-fabric-react!IGridProps#onBlur:member'
      - 'office-ui-fabric-react!IGridProps#onRenderItem:member'
      - 'office-ui-fabric-react!IGridProps#positionInSet:member'
      - 'office-ui-fabric-react!IGridProps#setSize:member'
      - 'office-ui-fabric-react!IGridProps#shouldFocusCircularNavigate:member'
      - 'office-ui-fabric-react!IGridProps#styles:member'
      - 'office-ui-fabric-react!IGridProps#theme:member'
  - uid: 'office-ui-fabric-react!IGridProps#columnCount:member'
    summary: The number of columns
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnCount: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IGridProps#componentRef:member'
    summary: Gets the component ref.
    name: componentRef
    fullName: componentRef
    langs:
      - typeScript
    type: property
    syntax:
      content: 'componentRef?: IRefObject<IGrid>;'
      return:
        type:
          - IRefObject<IGrid>
  - uid: 'office-ui-fabric-react!IGridProps#containerClassName:member'
    summary: 'Optional, class name for the FocusZone container for the grid'
    deprecated:
      content: Use `styles` and `IGridStyles` to define a styling for the focus zone container with focusedContainer property.
    name: containerClassName
    fullName: containerClassName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'containerClassName?: string;'
      return:
        type:
          - string
  - uid: 'office-ui-fabric-react!IGridProps#doNotContainWithinFocusZone:member'
    summary: If true do not contain the grid inside of a FocusZone. If false contain the grid inside of a FocusZone.
    name: doNotContainWithinFocusZone
    fullName: doNotContainWithinFocusZone
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doNotContainWithinFocusZone?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IGridProps#items:member'
    summary: The items to turn into a grid
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'items: any[];'
      return:
        type:
          - 'any[]'
  - uid: 'office-ui-fabric-react!IGridProps#onBlur:member'
    summary: 'Optional, handler for when the grid should blur'
    name: onBlur
    fullName: onBlur
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onBlur?: () => void;'
      return:
        type:
          - () => void
  - uid: 'office-ui-fabric-react!IGridProps#onRenderItem:member'
    summary: Custom renderer for the individual items
    name: onRenderItem
    fullName: onRenderItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onRenderItem: (item: any, index: number) => JSX.Element;'
      return:
        type:
          - '(item: any, index: number) => JSX.Element'
  - uid: 'office-ui-fabric-react!IGridProps#positionInSet:member'
    summary: 'The optional position this grid is in the parent set (index in a parent menu, for example)'
    name: positionInSet
    fullName: positionInSet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'positionInSet?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IGridProps#setSize:member'
    summary: 'The optional size of the parent set (size of parent menu, for example)'
    name: setSize
    fullName: setSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'setSize?: number;'
      return:
        type:
          - number
  - uid: 'office-ui-fabric-react!IGridProps#shouldFocusCircularNavigate:member'
    summary: >-
      Boolean indicating if the focus should support circular navigation. This prop is only relevant if
      doNotcontainWithinFocusZone is not true
    name: shouldFocusCircularNavigate
    fullName: shouldFocusCircularNavigate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shouldFocusCircularNavigate?: boolean;'
      return:
        type:
          - boolean
  - uid: 'office-ui-fabric-react!IGridProps#styles:member'
    summary: Optional styles for the component.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IGridStyleProps, IGridStyles>;'
      return:
        type:
          - 'IStyleFunctionOrObject<IGridStyleProps, IGridStyles>'
  - uid: 'office-ui-fabric-react!IGridProps#theme:member'
    summary: Theme to apply to the component.
    name: theme
    fullName: theme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'theme?: ITheme;'
      return:
        type:
          - '@uifabric/styling!ITheme:interface'
