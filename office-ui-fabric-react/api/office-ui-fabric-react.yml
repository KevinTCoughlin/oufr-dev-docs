### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react
    name: office-ui-fabric-react
    fullName: office-ui-fabric-react
    langs:
      - typeScript
    type: package
    children:
      - office-ui-fabric-react.ActionButton
      - office-ui-fabric-react.ActivityItem
      - office-ui-fabric-react.addDirectionalKeyCode
      - office-ui-fabric-react.addElementAtIndex
      - office-ui-fabric-react.arraysEqual
      - office-ui-fabric-react.asAsync
      - office-ui-fabric-react.assertNever
      - office-ui-fabric-react.assign
      - office-ui-fabric-react.Async
      - office-ui-fabric-react.autobind
      - office-ui-fabric-react.Autofill
      - office-ui-fabric-react.AutoScroll
      - office-ui-fabric-react.BaseAutoFill
      - office-ui-fabric-react.BaseButton
      - office-ui-fabric-react.BaseComponent
      - office-ui-fabric-react.BaseExtendedPeoplePicker
      - office-ui-fabric-react.BaseExtendedPicker
      - office-ui-fabric-react.BaseFloatingPeoplePicker
      - office-ui-fabric-react.BaseFloatingPicker
      - office-ui-fabric-react.BasePeoplePicker
      - office-ui-fabric-react.BasePeopleSelectedItemsList
      - office-ui-fabric-react.BasePicker
      - office-ui-fabric-react.BasePickerListBelow
      - office-ui-fabric-react.BaseSelectedItemsList
      - office-ui-fabric-react.BaseSlots
      - office-ui-fabric-react.BreadcrumbBase
      - office-ui-fabric-react.buildClassMap
      - office-ui-fabric-react.buildColumns
      - office-ui-fabric-react.Button
      - office-ui-fabric-react.ButtonType
      - office-ui-fabric-react.calculatePrecision
      - office-ui-fabric-react.Calendar
      - office-ui-fabric-react.Callout
      - office-ui-fabric-react.canAnyMenuItemsCheck
      - office-ui-fabric-react.CheckBase
      - office-ui-fabric-react.CheckboxBase
      - office-ui-fabric-react.CheckboxVisibility
      - office-ui-fabric-react.ChoiceGroupBase
      - office-ui-fabric-react.classNamesFunction
      - office-ui-fabric-react.Coachmark
      - office-ui-fabric-react.CollapseAllVisibility
      - office-ui-fabric-react.ColorPickerBase
      - office-ui-fabric-react.ColorPickerGridCellBase
      - office-ui-fabric-react.ColumnActionsMode
      - office-ui-fabric-react.ColumnDragEndLocation
      - office-ui-fabric-react.ComboBox
      - office-ui-fabric-react.CommandBarBase
      - office-ui-fabric-react.CommandBarButton
      - office-ui-fabric-react.CompactPeoplePicker
      - office-ui-fabric-react.CompoundButton
      - office-ui-fabric-react.concatStyleSets
      - office-ui-fabric-react.ConstrainMode
      - office-ui-fabric-react.ContextualMenuBase
      - office-ui-fabric-react.ContextualMenuItemBase
      - office-ui-fabric-react.ContextualMenuItemType
      - office-ui-fabric-react.createArray
      - office-ui-fabric-react.createFontStyles
      - office-ui-fabric-react.createGenericItem
      - office-ui-fabric-react.createItem
      - office-ui-fabric-react.createRef
      - office-ui-fabric-react.createTheme
      - office-ui-fabric-react.css
      - office-ui-fabric-react.cssColor
      - office-ui-fabric-react.customizable
      - office-ui-fabric-react.Customizations
      - office-ui-fabric-react.Customizer
      - office-ui-fabric-react.DatePickerBase
      - office-ui-fabric-react.DateRangeType
      - office-ui-fabric-react.DayOfWeek
      - office-ui-fabric-react.DefaultButton
      - office-ui-fabric-react.DelayedRender
      - office-ui-fabric-react.DetailsListBase
      - office-ui-fabric-react.DetailsListLayoutMode
      - office-ui-fabric-react.DetailsRowBase
      - office-ui-fabric-react.DialogBase
      - office-ui-fabric-react.DialogContentBase
      - office-ui-fabric-react.DialogFooterBase
      - office-ui-fabric-react.DialogType
      - office-ui-fabric-react.DirectionalHint
      - office-ui-fabric-react.disableBodyScroll
      - office-ui-fabric-react.DocumentCard
      - office-ui-fabric-react.DocumentCardActions
      - office-ui-fabric-react.DocumentCardActivity
      - office-ui-fabric-react.DocumentCardLocation
      - office-ui-fabric-react.DocumentCardLogo
      - office-ui-fabric-react.DocumentCardPreview
      - office-ui-fabric-react.DocumentCardStatus
      - office-ui-fabric-react.DocumentCardTitle
      - office-ui-fabric-react.DocumentCardType
      - office-ui-fabric-react.doesElementContainFocus
      - office-ui-fabric-react.DropdownBase
      - office-ui-fabric-react.DropdownMenuItemType
      - office-ui-fabric-react.elementContains
      - office-ui-fabric-react.elementContainsAttribute
      - office-ui-fabric-react.ElementType
      - office-ui-fabric-react.enableBodyScroll
      - office-ui-fabric-react.EventGroup
      - office-ui-fabric-react.ExpandingCardBase
      - office-ui-fabric-react.ExpandingCardMode
      - office-ui-fabric-react.ExtendedPeoplePicker
      - office-ui-fabric-react.ExtendedSelectedItem
      - office-ui-fabric-react.FabricBase
      - office-ui-fabric-react.FabricPerformance
      - office-ui-fabric-react.FabricSlots
      - office-ui-fabric-react.FacepileBase
      - office-ui-fabric-react.filteredAssign
      - office-ui-fabric-react.find
      - office-ui-fabric-react.findElementRecursive
      - office-ui-fabric-react.findIndex
      - office-ui-fabric-react.findScrollableParent
      - office-ui-fabric-react.FirstWeekOfYear
      - office-ui-fabric-react.fitContentToBounds
      - office-ui-fabric-react.flatten
      - office-ui-fabric-react.FloatingPeoplePicker
      - office-ui-fabric-react.focusAsync
      - office-ui-fabric-react.focusClear
      - office-ui-fabric-react.focusFirstChild
      - office-ui-fabric-react.FocusTrapZone
      - office-ui-fabric-react.FocusZone
      - office-ui-fabric-react.FocusZoneDirection
      - office-ui-fabric-react.FocusZoneTabbableElements
      - office-ui-fabric-react.fontFace
      - office-ui-fabric-react.format
      - office-ui-fabric-react.getBackgroundShade
      - office-ui-fabric-react.getChildren
      - office-ui-fabric-react.getColorFromRGBA
      - office-ui-fabric-react.getColorFromString
      - office-ui-fabric-react.getContrastRatio
      - office-ui-fabric-react.getDistanceBetweenPoints
      - office-ui-fabric-react.getDocument
      - office-ui-fabric-react.getFadedOverflowStyle
      - office-ui-fabric-react.getFirstFocusable
      - office-ui-fabric-react.getFirstTabbable
      - office-ui-fabric-react.getFocusStyle
      - office-ui-fabric-react.getFullColorString
      - office-ui-fabric-react.getGlobalClassNames
      - office-ui-fabric-react.getIcon
      - office-ui-fabric-react.getIconClassName
      - office-ui-fabric-react.getId
      - office-ui-fabric-react.getInitials
      - office-ui-fabric-react.getLanguage
      - office-ui-fabric-react.getLastFocusable
      - office-ui-fabric-react.getLastTabbable
      - office-ui-fabric-react.getNativeProps
      - office-ui-fabric-react.getNextElement
      - office-ui-fabric-react.getParent
      - office-ui-fabric-react.getPreviousElement
      - office-ui-fabric-react.getRect
      - office-ui-fabric-react.getResourceUrl
      - office-ui-fabric-react.getRTL
      - office-ui-fabric-react.getRTLSafeKeyCode
      - office-ui-fabric-react.getScreenSelector
      - office-ui-fabric-react.getScrollbarWidth
      - office-ui-fabric-react.getShade
      - office-ui-fabric-react.getSubmenuItems
      - office-ui-fabric-react.getTheme
      - office-ui-fabric-react.getVirtualParent
      - office-ui-fabric-react.getWindow
      - office-ui-fabric-react.GlobalSettings
      - office-ui-fabric-react.GridCell
      - office-ui-fabric-react.GroupedListBase
      - office-ui-fabric-react.hasHorizontalOverflow
      - office-ui-fabric-react.hasOverflow
      - office-ui-fabric-react.hasVerticalOverflow
      - office-ui-fabric-react.hoistMethods
      - office-ui-fabric-react.hoistStatics
      - office-ui-fabric-react.HoverCardBase
      - office-ui-fabric-react.HoverCardType
      - office-ui-fabric-react.hsl2hsv
      - office-ui-fabric-react.hsl2rgb
      - office-ui-fabric-react.hsv2hex
      - office-ui-fabric-react.hsv2hsl
      - office-ui-fabric-react.hsv2rgb
      - office-ui-fabric-react.IActivityItemProps
      - office-ui-fabric-react.IActivityItemStyles
      - office-ui-fabric-react.IAnimationStyles
      - office-ui-fabric-react.IAnimationVariables
      - office-ui-fabric-react.IAsAsyncOptions
      - office-ui-fabric-react.IAutofill
      - office-ui-fabric-react.IAutofillProps
      - office-ui-fabric-react.IAutofillState
      - office-ui-fabric-react.IBaseAutoFill
      - office-ui-fabric-react.IBaseAutoFillProps
      - office-ui-fabric-react.IBaseButtonProps
      - office-ui-fabric-react.IBaseButtonState
      - office-ui-fabric-react.IBaseExtendedPicker
      - office-ui-fabric-react.IBaseExtendedPickerProps
      - office-ui-fabric-react.IBaseExtendedPickerState
      - office-ui-fabric-react.IBaseFloatingPicker
      - office-ui-fabric-react.IBaseFloatingPickerProps
      - office-ui-fabric-react.IBaseFloatingPickerState
      - office-ui-fabric-react.IBaseFloatingPickerSuggestionProps
      - office-ui-fabric-react.IBasePicker
      - office-ui-fabric-react.IBasePickerProps
      - office-ui-fabric-react.IBasePickerState
      - office-ui-fabric-react.IBasePickerSuggestionsProps
      - office-ui-fabric-react.IBaseProps
      - office-ui-fabric-react.IBaseSelectedItemsList
      - office-ui-fabric-react.IBaseSelectedItemsListProps
      - office-ui-fabric-react.IBaseSelectedItemsListState
      - office-ui-fabric-react.IBreadcrumb
      - office-ui-fabric-react.IBreadCrumbData
      - office-ui-fabric-react.IBreadcrumbItem
      - office-ui-fabric-react.IBreadcrumbProps
      - office-ui-fabric-react.IBreadcrumbStyleProps
      - office-ui-fabric-react.IBreadcrumbStyles
      - office-ui-fabric-react.IButton
      - office-ui-fabric-react.IButtonProps
      - office-ui-fabric-react.IButtonStyles
      - office-ui-fabric-react.ICalendar
      - office-ui-fabric-react.ICalendarFormatDateCallbacks
      - office-ui-fabric-react.ICalendarIconStrings
      - office-ui-fabric-react.ICalendarProps
      - office-ui-fabric-react.ICalendarState
      - office-ui-fabric-react.ICalendarStrings
      - office-ui-fabric-react.ICallout
      - office-ui-fabric-react.ICalloutContentStyleProps
      - office-ui-fabric-react.ICalloutContentStyles
      - office-ui-fabric-react.ICalloutProps
      - office-ui-fabric-react.ICellStyleProps
      - office-ui-fabric-react.IChangeDescription
      - office-ui-fabric-react.IChangeEventCallback
      - office-ui-fabric-react.ICheckbox
      - office-ui-fabric-react.ICheckboxProps
      - office-ui-fabric-react.ICheckboxState
      - office-ui-fabric-react.ICheckboxStyleProps
      - office-ui-fabric-react.ICheckboxStyles
      - office-ui-fabric-react.ICheckProps
      - office-ui-fabric-react.ICheckStyleProps
      - office-ui-fabric-react.ICheckStyles
      - office-ui-fabric-react.IChoiceGroup
      - office-ui-fabric-react.IChoiceGroupOption
      - office-ui-fabric-react.IChoiceGroupOptionProps
      - office-ui-fabric-react.IChoiceGroupOptionStyleProps
      - office-ui-fabric-react.IChoiceGroupOptionStyles
      - office-ui-fabric-react.IChoiceGroupProps
      - office-ui-fabric-react.IChoiceGroupState
      - office-ui-fabric-react.IChoiceGroupStyleProps
      - office-ui-fabric-react.IChoiceGroupStyles
      - office-ui-fabric-react.ICircle
      - office-ui-fabric-react.ICoachmark
      - office-ui-fabric-react.ICoachmarkProps
      - office-ui-fabric-react.ICoachmarkState
      - office-ui-fabric-react.IColor
      - office-ui-fabric-react.IColorCellProps
      - office-ui-fabric-react.IColorPicker
      - office-ui-fabric-react.IColorPickerGridCellProps
      - office-ui-fabric-react.IColorPickerGridCellStyleProps
      - office-ui-fabric-react.IColorPickerGridCellStyles
      - office-ui-fabric-react.IColorPickerProps
      - office-ui-fabric-react.IColorPickerState
      - office-ui-fabric-react.IColorPickerStyleProps
      - office-ui-fabric-react.IColorPickerStyles
      - office-ui-fabric-react.IColorRectangle
      - office-ui-fabric-react.IColorRectangleProps
      - office-ui-fabric-react.IColorRectangleStyleProps
      - office-ui-fabric-react.IColorRectangleStyles
      - office-ui-fabric-react.IColorSlider
      - office-ui-fabric-react.IColorSliderProps
      - office-ui-fabric-react.IColorSliderStyleProps
      - office-ui-fabric-react.IColorSliderStyles
      - office-ui-fabric-react.IColumn
      - office-ui-fabric-react.IColumnDragDropDetails
      - office-ui-fabric-react.IColumnReorderOptions
      - office-ui-fabric-react.IComboBox
      - office-ui-fabric-react.IComboBoxOption
      - office-ui-fabric-react.IComboBoxOptionStyles
      - office-ui-fabric-react.IComboBoxProps
      - office-ui-fabric-react.IComboBoxState
      - office-ui-fabric-react.IComboBoxStyles
      - office-ui-fabric-react.ICommandBar
      - office-ui-fabric-react.ICommandBarData
      - office-ui-fabric-react.ICommandBarItemProps
      - office-ui-fabric-react.ICommandBarProps
      - office-ui-fabric-react.ICommandBarStyleProps
      - office-ui-fabric-react.ICommandBarStyles
      - office-ui-fabric-react.IconBase
      - office-ui-fabric-react.IconButton
      - office-ui-fabric-react.IconNames
      - office-ui-fabric-react.IContextualMenu
      - office-ui-fabric-react.IContextualMenuItem
      - office-ui-fabric-react.IContextualMenuItemProps
      - office-ui-fabric-react.IContextualMenuItemStyleProps
      - office-ui-fabric-react.IContextualMenuItemStyles
      - office-ui-fabric-react.IContextualMenuListProps
      - office-ui-fabric-react.IContextualMenuProps
      - office-ui-fabric-react.IContextualMenuRenderItem
      - office-ui-fabric-react.IContextualMenuSection
      - office-ui-fabric-react.IContextualMenuState
      - office-ui-fabric-react.IContextualMenuStyleProps
      - office-ui-fabric-react.IContextualMenuStyles
      - office-ui-fabric-react.IContextualMenuSubComponentStyles
      - office-ui-fabric-react.IconType
      - office-ui-fabric-react.ICustomizableProps
      - office-ui-fabric-react.ICustomizations
      - office-ui-fabric-react.ICustomizerContext
      - office-ui-fabric-react.IDatePicker
      - office-ui-fabric-react.IDatePickerProps
      - office-ui-fabric-react.IDatePickerState
      - office-ui-fabric-react.IDatePickerStrings
      - office-ui-fabric-react.IDatePickerStyleProps
      - office-ui-fabric-react.IDatePickerStyles
      - office-ui-fabric-react.IDelayedRenderProps
      - office-ui-fabric-react.IDetailsFooterBaseProps
      - office-ui-fabric-react.IDetailsFooterProps
      - office-ui-fabric-react.IDetailsGroupDividerProps
      - office-ui-fabric-react.IDetailsGroupRenderProps
      - office-ui-fabric-react.IDetailsHeaderBaseProps
      - office-ui-fabric-react.IDetailsHeaderProps
      - office-ui-fabric-react.IDetailsItemProps
      - office-ui-fabric-react.IDetailsList
      - office-ui-fabric-react.IDetailsListProps
      - office-ui-fabric-react.IDetailsListState
      - office-ui-fabric-react.IDetailsListStyles
      - office-ui-fabric-react.IDetailsRow
      - office-ui-fabric-react.IDetailsRowBaseProps
      - office-ui-fabric-react.IDetailsRowCheckProps
      - office-ui-fabric-react.IDetailsRowCheckStyles
      - office-ui-fabric-react.IDetailsRowProps
      - office-ui-fabric-react.IDetailsRowSelectionState
      - office-ui-fabric-react.IDetailsRowState
      - office-ui-fabric-react.IDetailsRowStyles
      - office-ui-fabric-react.IDialog
      - office-ui-fabric-react.IDialogContent
      - office-ui-fabric-react.IDialogContentProps
      - office-ui-fabric-react.IDialogContentStyleProps
      - office-ui-fabric-react.IDialogContentStyles
      - office-ui-fabric-react.IDialogFooter
      - office-ui-fabric-react.IDialogFooterProps
      - office-ui-fabric-react.IDialogFooterStyleProps
      - office-ui-fabric-react.IDialogFooterStyles
      - office-ui-fabric-react.IDialogProps
      - office-ui-fabric-react.IDialogState
      - office-ui-fabric-react.IDialogStyleProps
      - office-ui-fabric-react.IDialogStyles
      - office-ui-fabric-react.IDisposable
      - office-ui-fabric-react.IDividerAsProps
      - office-ui-fabric-react.IDocumentCard
      - office-ui-fabric-react.IDocumentCardActionsProps
      - office-ui-fabric-react.IDocumentCardActivityPerson
      - office-ui-fabric-react.IDocumentCardActivityProps
      - office-ui-fabric-react.IDocumentCardLocationProps
      - office-ui-fabric-react.IDocumentCardLogoProps
      - office-ui-fabric-react.IDocumentCardPreviewImage
      - office-ui-fabric-react.IDocumentCardPreviewProps
      - office-ui-fabric-react.IDocumentCardProps
      - office-ui-fabric-react.IDocumentCardStatusProps
      - office-ui-fabric-react.IDocumentCardTitleProps
      - office-ui-fabric-react.IDocumentCardTitleState
      - office-ui-fabric-react.IDropdown
      - office-ui-fabric-react.IDropdownInternalProps
      - office-ui-fabric-react.IDropdownOption
      - office-ui-fabric-react.IDropdownProps
      - office-ui-fabric-react.IDropdownState
      - office-ui-fabric-react.IDropdownStyles
      - office-ui-fabric-react.IDropdownSubComponentStyles
      - office-ui-fabric-react.IEntityRect
      - office-ui-fabric-react.IExpandingCard
      - office-ui-fabric-react.IExpandingCardProps
      - office-ui-fabric-react.IExpandingCardState
      - office-ui-fabric-react.IExpandingCardStyleProps
      - office-ui-fabric-react.IExpandingCardStyles
      - office-ui-fabric-react.IExtendedPeoplePickerProps
      - office-ui-fabric-react.IExtendedPersonaProps
      - office-ui-fabric-react.IFabricProps
      - office-ui-fabric-react.IFabricStyleProps
      - office-ui-fabric-react.IFabricStyles
      - office-ui-fabric-react.IFacepile
      - office-ui-fabric-react.IFacepilePersona
      - office-ui-fabric-react.IFacepileProps
      - office-ui-fabric-react.IFacepileStyleProps
      - office-ui-fabric-react.IFacepileStyles
      - office-ui-fabric-react.IFitContentToBoundsOptions
      - office-ui-fabric-react.IFocusTrapZone
      - office-ui-fabric-react.IFocusTrapZoneProps
      - office-ui-fabric-react.IFocusZone
      - office-ui-fabric-react.IFocusZoneProps
      - office-ui-fabric-react.IFontFace
      - office-ui-fabric-react.IFontStyles
      - office-ui-fabric-react.IGap
      - office-ui-fabric-react.IGenericItem
      - office-ui-fabric-react.IGrid
      - office-ui-fabric-react.IGridCellProps
      - office-ui-fabric-react.IGridProps
      - office-ui-fabric-react.IGridStyleProps
      - office-ui-fabric-react.IGridStyles
      - office-ui-fabric-react.IGroup
      - office-ui-fabric-react.IGroupDividerProps
      - office-ui-fabric-react.IGroupedList
      - office-ui-fabric-react.IGroupedListProps
      - office-ui-fabric-react.IGroupedListState
      - office-ui-fabric-react.IGroupedListStyles
      - office-ui-fabric-react.IGroupRenderProps
      - office-ui-fabric-react.IHoverCard
      - office-ui-fabric-react.IHoverCardProps
      - office-ui-fabric-react.IHoverCardState
      - office-ui-fabric-react.IHoverCardStyleProps
      - office-ui-fabric-react.IHoverCardStyles
      - office-ui-fabric-react.IHSL
      - office-ui-fabric-react.IHSV
      - office-ui-fabric-react.IIconOptions
      - office-ui-fabric-react.IIconProps
      - office-ui-fabric-react.IIconRecord
      - office-ui-fabric-react.IIconState
      - office-ui-fabric-react.IIconStyleProps
      - office-ui-fabric-react.IIconStyles
      - office-ui-fabric-react.IIconSubset
      - office-ui-fabric-react.IImage
      - office-ui-fabric-react.IImageProps
      - office-ui-fabric-react.IImageState
      - office-ui-fabric-react.IImageStyleProps
      - office-ui-fabric-react.IImageStyles
      - office-ui-fabric-react.IInputProps
      - office-ui-fabric-react.IKeytip
      - office-ui-fabric-react.IKeytipLayer
      - office-ui-fabric-react.IKeytipLayerProps
      - office-ui-fabric-react.IKeytipLayerState
      - office-ui-fabric-react.IKeytipLayerStyleProps
      - office-ui-fabric-react.IKeytipLayerStyles
      - office-ui-fabric-react.IKeytipProps
      - office-ui-fabric-react.IKeytipStyleProps
      - office-ui-fabric-react.IKeytipStyles
      - office-ui-fabric-react.ILabel
      - office-ui-fabric-react.ILabelProps
      - office-ui-fabric-react.ILabelStyleProps
      - office-ui-fabric-react.ILabelStyles
      - office-ui-fabric-react.ILayer
      - office-ui-fabric-react.ILayerProps
      - office-ui-fabric-react.ILayerStyleProps
      - office-ui-fabric-react.ILayerStyles
      - office-ui-fabric-react.ILine
      - office-ui-fabric-react.ILink
      - office-ui-fabric-react.ILinkHTMLAttributes
      - office-ui-fabric-react.ILinkProps
      - office-ui-fabric-react.ILinkStyleProps
      - office-ui-fabric-react.ILinkStyles
      - office-ui-fabric-react.IList
      - office-ui-fabric-react.IListProps
      - office-ui-fabric-react.IListState
      - office-ui-fabric-react.ImageBase
      - office-ui-fabric-react.ImageCoverStyle
      - office-ui-fabric-react.ImageFit
      - office-ui-fabric-react.ImageLoadState
      - office-ui-fabric-react.IMarqueeSelection
      - office-ui-fabric-react.IMarqueeSelectionProps
      - office-ui-fabric-react.IMarqueeSelectionStyleProps
      - office-ui-fabric-react.IMarqueeSelectionStyles
      - office-ui-fabric-react.IMaskedTextFieldState
      - office-ui-fabric-react.IMenuItemStyles
      - office-ui-fabric-react.IMessageBar
      - office-ui-fabric-react.IMessageBarProps
      - office-ui-fabric-react.IMessageBarState
      - office-ui-fabric-react.IMessageBarStyleProps
      - office-ui-fabric-react.IMessageBarStyles
      - office-ui-fabric-react.IModal
      - office-ui-fabric-react.IModalProps
      - office-ui-fabric-react.IModalStyles
      - office-ui-fabric-react.INav
      - office-ui-fabric-react.INavLink
      - office-ui-fabric-react.INavLinkGroup
      - office-ui-fabric-react.INavProps
      - office-ui-fabric-react.INavState
      - office-ui-fabric-react.INavStyleProps
      - office-ui-fabric-react.INavStyles
      - office-ui-fabric-react.initializeFocusRects
      - office-ui-fabric-react.initializeIcons
      - office-ui-fabric-react.InjectionMode
      - office-ui-fabric-react.IObjectWithKey
      - office-ui-fabric-react.IOverflowSet
      - office-ui-fabric-react.IOverflowSetItemProps
      - office-ui-fabric-react.IOverflowSetProps
      - office-ui-fabric-react.IOverflowSetStyles
      - office-ui-fabric-react.IOverlay
      - office-ui-fabric-react.IOverlayProps
      - office-ui-fabric-react.IOverlayStyleProps
      - office-ui-fabric-react.IOverlayStyles
      - office-ui-fabric-react.IPage
      - office-ui-fabric-react.IPageProps
      - office-ui-fabric-react.IPageSpecification
      - office-ui-fabric-react.IPalette
      - office-ui-fabric-react.IPanel
      - office-ui-fabric-react.IPanelHeaderRenderer
      - office-ui-fabric-react.IPanelProps
      - office-ui-fabric-react.IPanelStyleProps
      - office-ui-fabric-react.IPanelStyles
      - office-ui-fabric-react.IPeopleFloatingPickerProps
      - office-ui-fabric-react.IPeoplePickerItemProps
      - office-ui-fabric-react.IPeoplePickerItemState
      - office-ui-fabric-react.IPeoplePickerProps
      - office-ui-fabric-react.IPersona
      - office-ui-fabric-react.IPersonaCoinProps
      - office-ui-fabric-react.IPersonaCoinStyleProps
      - office-ui-fabric-react.IPersonaCoinStyles
      - office-ui-fabric-react.IPersonaPresenceProps
      - office-ui-fabric-react.IPersonaPresenceStyleProps
      - office-ui-fabric-react.IPersonaPresenceStyles
      - office-ui-fabric-react.IPersonaProps
      - office-ui-fabric-react.IPersonaSharedProps
      - office-ui-fabric-react.IPersonaState
      - office-ui-fabric-react.IPersonaStyleProps
      - office-ui-fabric-react.IPersonaStyles
      - office-ui-fabric-react.IPickerItemProps
      - office-ui-fabric-react.IPivot
      - office-ui-fabric-react.IPivotItemProps
      - office-ui-fabric-react.IPivotProps
      - office-ui-fabric-react.IPivotState
      - office-ui-fabric-react.IPivotStyles
      - office-ui-fabric-react.IPlainCard
      - office-ui-fabric-react.IPlainCardProps
      - office-ui-fabric-react.IPlainCardStyleProps
      - office-ui-fabric-react.IPlainCardStyles
      - office-ui-fabric-react.IPoint
      - office-ui-fabric-react.IPopup
      - office-ui-fabric-react.IPopupProps
      - office-ui-fabric-react.IPopupState
      - office-ui-fabric-react.IPositioningContainer
      - office-ui-fabric-react.IPositioningContainerProps
      - office-ui-fabric-react.IPositioningContainerState
      - office-ui-fabric-react.IProgressIndicator
      - office-ui-fabric-react.IProgressIndicatorProps
      - office-ui-fabric-react.IProgressIndicatorStyleProps
      - office-ui-fabric-react.IProgressIndicatorStyles
      - office-ui-fabric-react.IPropsWithStyles
      - office-ui-fabric-react.IRating
      - office-ui-fabric-react.IRatingProps
      - office-ui-fabric-react.IRatingState
      - office-ui-fabric-react.IRatingStyleProps
      - office-ui-fabric-react.IRatingStyles
      - office-ui-fabric-react.IRawStyle
      - office-ui-fabric-react.IRectangle
      - office-ui-fabric-react.IRenderComponent
      - office-ui-fabric-react.IRenderFunction
      - office-ui-fabric-react.IResizeGroup
      - office-ui-fabric-react.IResizeGroupProps
      - office-ui-fabric-react.IResizeGroupState
      - office-ui-fabric-react.IResizeGroupStyleProps
      - office-ui-fabric-react.IResizeGroupStyles
      - office-ui-fabric-react.IRGB
      - office-ui-fabric-react.IScheme
      - office-ui-fabric-react.IScrollablePane
      - office-ui-fabric-react.IScrollablePaneContext
      - office-ui-fabric-react.IScrollablePaneProps
      - office-ui-fabric-react.IScrollablePaneState
      - office-ui-fabric-react.IScrollablePaneStyleProps
      - office-ui-fabric-react.IScrollablePaneStyles
      - office-ui-fabric-react.isDark
      - office-ui-fabric-react.isDirectionalKeyCode
      - office-ui-fabric-react.ISearchBox
      - office-ui-fabric-react.ISearchBoxProps
      - office-ui-fabric-react.ISearchBoxState
      - office-ui-fabric-react.ISearchBoxStyleProps
      - office-ui-fabric-react.ISearchBoxStyles
      - office-ui-fabric-react.ISelectableDroppableTextProps
      - office-ui-fabric-react.ISelectableOption
      - office-ui-fabric-react.ISelectedItemProps
      - office-ui-fabric-react.ISelectedPeopleItemProps
      - office-ui-fabric-react.ISelectedPeopleProps
      - office-ui-fabric-react.ISelection
      - office-ui-fabric-react.ISelectionOptions
      - office-ui-fabric-react.ISelectionZone
      - office-ui-fabric-react.ISelectionZoneProps
      - office-ui-fabric-react.isElementFocusSubZone
      - office-ui-fabric-react.isElementFocusZone
      - office-ui-fabric-react.isElementTabbable
      - office-ui-fabric-react.isElementVisible
      - office-ui-fabric-react.ISemanticColors
      - office-ui-fabric-react.ISemanticTextColors
      - office-ui-fabric-react.IShimmer
      - office-ui-fabric-react.IShimmerCircle
      - office-ui-fabric-react.IShimmerCircleProps
      - office-ui-fabric-react.IShimmerCircleStyles
      - office-ui-fabric-react.IShimmerElement
      - office-ui-fabric-react.IShimmerElementsGroup
      - office-ui-fabric-react.IShimmerElementsGroupProps
      - office-ui-fabric-react.IShimmerElementsGroupStyleProps
      - office-ui-fabric-react.IShimmerElementsGroupStyles
      - office-ui-fabric-react.IShimmerGap
      - office-ui-fabric-react.IShimmerGapProps
      - office-ui-fabric-react.IShimmerGapStyles
      - office-ui-fabric-react.IShimmerLine
      - office-ui-fabric-react.IShimmerLineProps
      - office-ui-fabric-react.IShimmerLineStyles
      - office-ui-fabric-react.IShimmerProps
      - office-ui-fabric-react.IShimmerState
      - office-ui-fabric-react.IShimmerStyleProps
      - office-ui-fabric-react.IShimmerStyles
      - office-ui-fabric-react.ISize
      - office-ui-fabric-react.ISlider
      - office-ui-fabric-react.ISliderProps
      - office-ui-fabric-react.ISliderState
      - office-ui-fabric-react.ISliderStyles
      - office-ui-fabric-react.isMac
      - office-ui-fabric-react.ISpinButton
      - office-ui-fabric-react.ISpinButtonProps
      - office-ui-fabric-react.ISpinButtonState
      - office-ui-fabric-react.ISpinButtonStyles
      - office-ui-fabric-react.ISpinner
      - office-ui-fabric-react.ISpinnerProps
      - office-ui-fabric-react.ISpinnerStyleProps
      - office-ui-fabric-react.ISpinnerStyles
      - office-ui-fabric-react.isRelativeUrl
      - office-ui-fabric-react.IStickyContext
      - office-ui-fabric-react.IStickyProps
      - office-ui-fabric-react.IStickyState
      - office-ui-fabric-react.IStyleSheetConfig
      - office-ui-fabric-react.ISuggestionItemProps
      - office-ui-fabric-react.ISuggestionModel
      - office-ui-fabric-react.ISuggestionsControlProps
      - office-ui-fabric-react.ISuggestionsControlState
      - office-ui-fabric-react.ISuggestionsCoreProps
      - office-ui-fabric-react.ISuggestionsHeaderFooterItemProps
      - office-ui-fabric-react.ISuggestionsHeaderFooterProps
      - office-ui-fabric-react.ISuggestionsProps
      - office-ui-fabric-react.ISuggestionsState
      - office-ui-fabric-react.isValidShade
      - office-ui-fabric-react.ISwatchColorPicker
      - office-ui-fabric-react.ISwatchColorPickerProps
      - office-ui-fabric-react.ISwatchColorPickerState
      - office-ui-fabric-react.ISwatchColorPickerStyleProps
      - office-ui-fabric-react.ISwatchColorPickerStyles
      - office-ui-fabric-react.ITag
      - office-ui-fabric-react.ITagItemProps
      - office-ui-fabric-react.ITagPickerProps
      - office-ui-fabric-react.ITeachingBubble
      - office-ui-fabric-react.ITeachingBubbleProps
      - office-ui-fabric-react.ITeachingBubbleState
      - office-ui-fabric-react.ITeachingBubbleStyles
      - office-ui-fabric-react.ITextField
      - office-ui-fabric-react.ITextFieldProps
      - office-ui-fabric-react.ITextFieldState
      - office-ui-fabric-react.ITextFieldStyles
      - office-ui-fabric-react.ITextFieldSubComponentStyles
      - office-ui-fabric-react.ITheme
      - office-ui-fabric-react.IThemeRules
      - office-ui-fabric-react.IThemeSlotRule
      - office-ui-fabric-react.IToggle
      - office-ui-fabric-react.IToggleProps
      - office-ui-fabric-react.IToggleState
      - office-ui-fabric-react.IToggleStyleProps
      - office-ui-fabric-react.IToggleStyles
      - office-ui-fabric-react.ITooltip
      - office-ui-fabric-react.ITooltipHost
      - office-ui-fabric-react.ITooltipHostProps
      - office-ui-fabric-react.ITooltipHostState
      - office-ui-fabric-react.ITooltipHostStyleProps
      - office-ui-fabric-react.ITooltipHostStyles
      - office-ui-fabric-react.ITooltipProps
      - office-ui-fabric-react.ITooltipStyleProps
      - office-ui-fabric-react.ITooltipStyles
      - office-ui-fabric-react.IVerticalDividerClassNames
      - office-ui-fabric-react.IVerticalDividerProps
      - office-ui-fabric-react.KeyboardSpinDirection
      - office-ui-fabric-react.KeyCodes
      - office-ui-fabric-react.keyframes
      - office-ui-fabric-react.Keytip
      - office-ui-fabric-react.KeytipData
      - office-ui-fabric-react.KeytipLayerBase
      - office-ui-fabric-react.LabelBase
      - office-ui-fabric-react.LayerBase
      - office-ui-fabric-react.LayerHost
      - office-ui-fabric-react.LinkBase
      - office-ui-fabric-react.List
      - office-ui-fabric-react.ListPeoplePicker
      - office-ui-fabric-react.loadTheme
      - office-ui-fabric-react.mapEnumByName
      - office-ui-fabric-react.MaskedTextField
      - office-ui-fabric-react.MemberListPeoplePicker
      - office-ui-fabric-react.memoize
      - office-ui-fabric-react.memoizeFunction
      - office-ui-fabric-react.merge
      - office-ui-fabric-react.mergeAriaAttributeValues
      - office-ui-fabric-react.mergeCustomizations
      - office-ui-fabric-react.mergeSettings
      - office-ui-fabric-react.mergeStyles
      - office-ui-fabric-react.mergeStyleSets
      - office-ui-fabric-react.MessageBarBase
      - office-ui-fabric-react.MessageBarButton
      - office-ui-fabric-react.MessageBarType
      - office-ui-fabric-react.ModalBase
      - office-ui-fabric-react.NavBase
      - office-ui-fabric-react.NormalPeoplePicker
      - office-ui-fabric-react.nullRender
      - office-ui-fabric-react.OpenCardMode
      - office-ui-fabric-react.OverflowButtonType
      - office-ui-fabric-react.OverflowSetBase
      - office-ui-fabric-react.OverlayBase
      - office-ui-fabric-react.PanelType
      - office-ui-fabric-react.PersonaBase
      - office-ui-fabric-react.PersonaCoinBase
      - office-ui-fabric-react.PersonaInitialsColor
      - office-ui-fabric-react.PersonaPresence
      - office-ui-fabric-react.PersonaSize
      - office-ui-fabric-react.PivotBase
      - office-ui-fabric-react.PivotItem
      - office-ui-fabric-react.PivotLinkFormat
      - office-ui-fabric-react.PivotLinkSize
      - office-ui-fabric-react.PlainCardBase
      - office-ui-fabric-react.Popup
      - office-ui-fabric-react.portalContainsElement
      - office-ui-fabric-react.PositioningContainer
      - office-ui-fabric-react.precisionRound
      - office-ui-fabric-react.PrimaryButton
      - office-ui-fabric-react.ProgressIndicatorBase
      - office-ui-fabric-react.provideContext
      - office-ui-fabric-react.RatingBase
      - office-ui-fabric-react.RatingSize
      - office-ui-fabric-react.Rectangle
      - office-ui-fabric-react.registerDefaultFontFaces
      - office-ui-fabric-react.registerIconAlias
      - office-ui-fabric-react.registerIcons
      - office-ui-fabric-react.registerOnThemeChangeCallback
      - office-ui-fabric-react.removeIndex
      - office-ui-fabric-react.removeOnThemeChangeCallback
      - office-ui-fabric-react.replaceElement
      - office-ui-fabric-react.resetIds
      - office-ui-fabric-react.resetMemoizations
      - office-ui-fabric-react.ResizeGroupBase
      - office-ui-fabric-react.rgb2hex
      - office-ui-fabric-react.rgb2hsv
      - office-ui-fabric-react.ScrollablePaneBase
      - office-ui-fabric-react.ScrollbarVisibility
      - office-ui-fabric-react.ScrollToMode
      - office-ui-fabric-react.SearchBoxBase
      - office-ui-fabric-react.SelectableOptionMenuItemType
      - office-ui-fabric-react.SelectedPeopleList
      - office-ui-fabric-react.Selection
      - office-ui-fabric-react.SelectionDirection
      - office-ui-fabric-react.SelectionMode
      - office-ui-fabric-react.SelectionZone
      - office-ui-fabric-react.SemanticColorSlots
      - office-ui-fabric-react.setBaseUrl
      - office-ui-fabric-react.setIconOptions
      - office-ui-fabric-react.setLanguage
      - office-ui-fabric-react.setPortalAttribute
      - office-ui-fabric-react.setRTL
      - office-ui-fabric-react.setSSR
      - office-ui-fabric-react.setVirtualParent
      - office-ui-fabric-react.setWarningCallback
      - office-ui-fabric-react.Shade
      - office-ui-fabric-react.shallowCompare
      - office-ui-fabric-react.ShimmerBase
      - office-ui-fabric-react.ShimmerCircleBase
      - office-ui-fabric-react.ShimmeredDetailsListBase
      - office-ui-fabric-react.ShimmerElementsDefaultHeights
      - office-ui-fabric-react.ShimmerElementsGroupBase
      - office-ui-fabric-react.ShimmerElementType
      - office-ui-fabric-react.ShimmerGapBase
      - office-ui-fabric-react.ShimmerLineBase
      - office-ui-fabric-react.shouldWrapFocus
      - office-ui-fabric-react.SliderBase
      - office-ui-fabric-react.SpinButton
      - office-ui-fabric-react.SpinnerBase
      - office-ui-fabric-react.SpinnerSize
      - office-ui-fabric-react.SpinnerType
      - office-ui-fabric-react.Sticky
      - office-ui-fabric-react.StickyPositionType
      - office-ui-fabric-react.styled
      - office-ui-fabric-react.Stylesheet
      - office-ui-fabric-react.SuggestionActionType
      - office-ui-fabric-react.SuggestionItemType
      - office-ui-fabric-react.Suggestions
      - office-ui-fabric-react.SuggestionsControl
      - office-ui-fabric-react.SuggestionsController
      - office-ui-fabric-react.SuggestionsCore
      - office-ui-fabric-react.SuggestionsHeaderFooterItem
      - office-ui-fabric-react.SuggestionsItem
      - office-ui-fabric-react.SuggestionsStore
      - office-ui-fabric-react.SwatchColorPickerBase
      - office-ui-fabric-react.TagPicker
      - office-ui-fabric-react.TeachingBubbleBase
      - office-ui-fabric-react.TeachingBubbleContentBase
      - office-ui-fabric-react.TextFieldBase
      - office-ui-fabric-react.ThemeGenerator
      - office-ui-fabric-react.themeRulesStandardCreator
      - office-ui-fabric-react.ToggleBase
      - office-ui-fabric-react.toMatrix
      - office-ui-fabric-react.TooltipBase
      - office-ui-fabric-react.TooltipDelay
      - office-ui-fabric-react.TooltipHostBase
      - office-ui-fabric-react.TooltipOverflowMode
      - office-ui-fabric-react.unhoistMethods
      - office-ui-fabric-react.unregisterIcons
      - office-ui-fabric-react.updateA
      - office-ui-fabric-react.updateH
      - office-ui-fabric-react.updateSV
      - office-ui-fabric-react.ValidationState
      - office-ui-fabric-react.ValuePosition
      - office-ui-fabric-react.values
      - office-ui-fabric-react.VirtualizedComboBox
      - office-ui-fabric-react.warn
      - office-ui-fabric-react.warnConditionallyRequiredProps
      - office-ui-fabric-react.warnDeprecations
      - office-ui-fabric-react.warnMutuallyExclusive
  - uid: office-ui-fabric-react.addDirectionalKeyCode
    summary: >-
      Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible. This can be
      used to add global shortcut keys that directionally move from section to section within an app or between focus
      trap zones.
    name: addDirectionalKeyCode(which)
    fullName: addDirectionalKeyCode
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function addDirectionalKeyCode(which: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: which
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.addElementAtIndex
    summary: 'Given an array, this function returns a new array where an element has been inserted at the given index.'
    name: 'addElementAtIndex(array, index, itemToAdd)'
    fullName: addElementAtIndex
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function addElementAtIndex<T>(array: T[], index: number, itemToAdd: T): T[];'
      return:
        type:
          - 'T[]'
        description: ''
      parameters:
        - id: array
          description: The array to operate on
          type:
            - 'T[]'
        - id: index
          description: The index where an element should be inserted
          type:
            - number
        - id: itemToAdd
          description: The element to insert
          type:
            - T
  - uid: office-ui-fabric-react.arraysEqual
    summary: Returns a boolean indicating if the two given arrays are equal in length and values.
    name: 'arraysEqual(array1, array2)'
    fullName: arraysEqual
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function arraysEqual<T>(array1: T[], array2: T[]): boolean;'
      return:
        type:
          - boolean
        description: 'True if the arrays are the same length and have the same values in the same positions, false otherwise.'
      parameters:
        - id: array1
          description: First array to compare
          type:
            - 'T[]'
        - id: array2
          description: Second array to compare
          type:
            - 'T[]'
  - uid: office-ui-fabric-react.asAsync
    summary: >-
      Produces a component which internally loads the target component before first mount. The component passes all
      props through to the loaded component.


      This overload accepts a module with a default export for the component.
    name: asAsync(options)
    fullName: asAsync
    langs:
      - typeScript
    type: function
    syntax:
      content: |-
        export function asAsync<TProps>(options: IAsAsyncOptions<TProps>): React.ComponentType<TProps & {
            asyncPlaceholder?: React.ReactType;
        }>;
      return:
        type:
          - |-
            React.ComponentType<TProps & {
                asyncPlaceholder?: React.ReactType;
            }>
        description: ''
      parameters:
        - id: options
          description: ''
          type:
            - IAsAsyncOptions<TProps>
  - uid: office-ui-fabric-react.assertNever
    summary: AssertNever is a utility function that can be used for exhaustiveness checks in switch statements.
    name: assertNever(x)
    fullName: assertNever
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function assertNever(x: never): never;'
      return:
        type:
          - never
        description: ''
      parameters:
        - id: x
          description: ''
          type:
            - never
  - uid: office-ui-fabric-react.assign
    summary: >-
      Makes a resulting merge of a bunch of objects. Pass in the target object followed by 1 or more objects as
      arguments and they will be merged sequentially into the target. Note that this will shallow merge; it will not
      create new cloned values for target members.
    name: 'assign(target, args)'
    fullName: assign
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function assign(target: any, ...args: any[]): any;'
      return:
        type:
          - any
        description: Resulting merged target.
      parameters:
        - id: target
          description: Target object to merge following object arguments into.
          type:
            - any
        - id: args
          description: One or more objects that will be mixed into the target in the order they are provided.
          type:
            - 'any[]'
  - uid: office-ui-fabric-react.autobind
    summary: >-
      Autobind is a utility for binding methods in a class. This simplifies tagging methods as being "bound" to the this
      pointer so that they can be used in scenarios that simply require a function callback.
    deprecated:
      content: This has been deprecated in favor of using arrow function properties
    name: 'autobind(target, key, descriptor)'
    fullName: autobind
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function autobind<T extends Function>(target: any, key: string, descriptor: TypedPropertyDescriptor<T>):
        {
            configurable: boolean;
            get(): T;
            set(newValue: any): void;
        } | void;
      return:
        type:
          - |-
            {
                configurable: boolean;
                get(): T;
                set(newValue: any): void;
            } | void
        description: ''
      parameters:
        - id: target
          description: ''
          type:
            - any
        - id: key
          description: ''
          type:
            - string
        - id: descriptor
          description: ''
          type:
            - TypedPropertyDescriptor<T>
  - uid: office-ui-fabric-react.buildClassMap
    summary: Builds a class names object from a given map.
    name: buildClassMap(styles)
    fullName: buildClassMap
    langs:
      - typeScript
    type: function
    syntax:
      content: |-
        export function buildClassMap<T>(styles: T): {
            [key in keyof T]?: string;
        };
      return:
        type:
          - |-
            {
                [key in keyof T]?: string;
            }
        description: Map of property name to class name.
      parameters:
        - id: styles
          description: Map of unprocessed styles.
          type:
            - T
  - uid: office-ui-fabric-react.buildColumns
    name: >-
      buildColumns(items, canResizeColumns, onColumnClick, sortedColumnKey, isSortedDescending, groupedColumnKey,
      isMultiline)
    fullName: buildColumns
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function buildColumns(items: any[], canResizeColumns?: boolean, onColumnClick?: (ev:
        React.MouseEvent<HTMLElement>, column: IColumn) => any, sortedColumnKey?: string, isSortedDescending?: boolean,
        groupedColumnKey?: string, isMultiline?: boolean): IColumn[];
      return:
        type:
          - 'IColumn[]'
        description: ''
      parameters:
        - id: items
          description: ''
          type:
            - 'any[]'
        - id: canResizeColumns
          description: ''
          type:
            - boolean
        - id: onColumnClick
          description: ''
          type:
            - '(ev: React.MouseEvent<HTMLElement>, column: IColumn) => any'
        - id: sortedColumnKey
          description: ''
          type:
            - string
        - id: isSortedDescending
          description: ''
          type:
            - boolean
        - id: groupedColumnKey
          description: ''
          type:
            - string
        - id: isMultiline
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.calculatePrecision
    summary: >-
      Calculates a number's precision based on the number of trailing zeros if the number does not have a decimal
      indicated by a negative precision. Otherwise, it calculates the number of digits after the decimal point indicated
      by a positive precision.
    name: calculatePrecision(value)
    fullName: calculatePrecision
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function calculatePrecision(value: number | string): number;'
      return:
        type:
          - number
        description: ''
      parameters:
        - id: value
          description: the value to determine the precision of
          type:
            - number | string
  - uid: office-ui-fabric-react.canAnyMenuItemsCheck
    summary: Returns true if a list of menu items can contain a checkbox
    name: canAnyMenuItemsCheck(items)
    fullName: canAnyMenuItemsCheck
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function canAnyMenuItemsCheck(items: IContextualMenuItem[]): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: items
          description: ''
          type:
            - 'IContextualMenuItem[]'
  - uid: office-ui-fabric-react.classNamesFunction
    summary: 'Creates a getClassNames function which calls getStyles given the props, and injects them into mergeStyleSets.'
    name: classNamesFunction()
    fullName: classNamesFunction
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function classNamesFunction<TStyleProps extends {}, TStyleSet extends IStyleSet<TStyleSet>>():
        (getStyles: IStyleFunctionOrObject<TStyleProps, TStyleSet> | undefined, styleProps?: TStyleProps) =>
        IProcessedStyleSet<TStyleSet>;
      return:
        type:
          - >-
            (getStyles: IStyleFunctionOrObject<TStyleProps, TStyleSet> | undefined, styleProps?: TStyleProps) =>
            IProcessedStyleSet<TStyleSet>
        description: ''
  - uid: office-ui-fabric-react.concatStyleSets
    summary: Combine a set of styles together (but does not register css classes).
    name: concatStyleSets(styleSets)
    fullName: concatStyleSets
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function concatStyleSets(...styleSets: (IStyleSet<any> | false | null | undefined)[]):
        IConcatenatedStyleSet<any>;
      return:
        type:
          - IConcatenatedStyleSet<any>
        description: ''
      parameters:
        - id: styleSets
          description: One or more stylesets to be merged (each param can also be falsy).
          type:
            - '(IStyleSet<any> | false | null | undefined)[]'
  - uid: office-ui-fabric-react.createArray
    summary: Creates an array of a given size and helper method to populate.
    name: 'createArray(size, getItem)'
    fullName: createArray
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function createArray<T>(size: number, getItem: (index: number) => T): T[];'
      return:
        type:
          - 'T[]'
        description: ''
      parameters:
        - id: size
          description: Size of array.
          type:
            - number
        - id: getItem
          description: Callback to populate given cell index.
          type:
            - '(index: number) => T'
  - uid: office-ui-fabric-react.createFontStyles
    name: createFontStyles(localeCode)
    fullName: createFontStyles
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function createFontStyles(localeCode: string | null): IFontStyles;'
      return:
        type:
          - office-ui-fabric-react.IFontStyles
        description: ''
      parameters:
        - id: localeCode
          description: ''
          type:
            - string | null
  - uid: office-ui-fabric-react.createGenericItem
    name: 'createGenericItem(name, currentValidationState, allowPhoneInitials)'
    fullName: createGenericItem
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function createGenericItem(name: string, currentValidationState: ValidationState, allowPhoneInitials:
        boolean): IGenericItem & {
            key: React.Key;
        };
      return:
        type:
          - |-
            IGenericItem & {
                key: React.Key;
            }
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
        - id: currentValidationState
          description: ''
          type:
            - office-ui-fabric-react.ValidationState
        - id: allowPhoneInitials
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.createItem
    name: 'createItem(name, isValid)'
    fullName: createItem
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function createItem(name: string, isValid: boolean): ISuggestionModel<IPersonaProps>;'
      return:
        type:
          - ISuggestionModel<IPersonaProps>
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
        - id: isValid
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.createRef
    deprecated:
      content: Use React.createRef. May be removed in 6 months (Jan '19).
    name: createRef()
    fullName: createRef
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function createRef<T>(): RefObject<T>;'
      return:
        type:
          - RefObject<T>
        description: ''
  - uid: office-ui-fabric-react.createTheme
    summary: Creates a custom theme definition which can be used with the Customizer.
    name: 'createTheme(theme, depComments)'
    fullName: createTheme
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function createTheme(theme: IPartialTheme, depComments?: boolean): ITheme;'
      return:
        type:
          - office-ui-fabric-react.ITheme
        description: ''
      parameters:
        - id: theme
          description: Partial theme object.
          type:
            - IPartialTheme
        - id: depComments
          description: Whether to include deprecated tags as comments for deprecated slots.
          type:
            - boolean
  - uid: office-ui-fabric-react.css
    summary: 'Concatination helper, which can merge class names together. Skips over falsey values.'
    name: css(args)
    fullName: css
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function css(...args: ICssInput[]): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: args
          description: ''
          type:
            - 'ICssInput[]'
  - uid: office-ui-fabric-react.cssColor
    name: cssColor(color)
    fullName: cssColor
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function cssColor(color: string): IRGB | undefined;'
      return:
        type:
          - IRGB | undefined
        description: ''
      parameters:
        - id: color
          description: ''
          type:
            - string
  - uid: office-ui-fabric-react.customizable
    name: 'customizable(scope, fields, concatStyles)'
    fullName: customizable
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function customizable(scope: string, fields: string[], concatStyles?: boolean): <P>(ComposedComponent:
        React.ComponentType<P>) => any;
      return:
        type:
          - '<P>(ComposedComponent: React.ComponentType<P>) => any'
        description: ''
      parameters:
        - id: scope
          description: ''
          type:
            - string
        - id: fields
          description: ''
          type:
            - 'string[]'
        - id: concatStyles
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.disableBodyScroll
    summary: Disables the body scrolling.
    name: disableBodyScroll()
    fullName: disableBodyScroll
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function disableBodyScroll(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.doesElementContainFocus
    summary: 'Determines if an element, or any of its children, contain focus.'
    name: doesElementContainFocus(element)
    fullName: doesElementContainFocus
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function doesElementContainFocus(element: HTMLElement): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: element
          description: ''
          type:
            - HTMLElement
  - uid: office-ui-fabric-react.elementContains
    summary: >-
      Determines whether or not a parent element contains a given child element. If `allowVirtualParents` is true, this
      method may return `true` if the child has the parent in its virtual element hierarchy.
    name: 'elementContains(parent, child, allowVirtualParents)'
    fullName: elementContains
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function elementContains(parent: HTMLElement | null, child: HTMLElement | null, allowVirtualParents?:
        boolean): boolean;
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: parent
          description: ''
          type:
            - HTMLElement | null
        - id: child
          description: ''
          type:
            - HTMLElement | null
        - id: allowVirtualParents
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.elementContainsAttribute
    summary: 'Determines if an element, or any of its ancestors, contain the given attribute'
    name: 'elementContainsAttribute(element, attribute)'
    fullName: elementContainsAttribute
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function elementContainsAttribute(element: HTMLElement, attribute: string): string | null;'
      return:
        type:
          - string | null
        description: the value of the first instance found
      parameters:
        - id: element
          description: element to start searching at
          type:
            - HTMLElement
        - id: attribute
          description: the attribute to search for
          type:
            - string
  - uid: office-ui-fabric-react.enableBodyScroll
    summary: Enables the body scrolling.
    name: enableBodyScroll()
    fullName: enableBodyScroll
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function enableBodyScroll(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.filteredAssign
    summary: >-
      Makes a resulting merge of a bunch of objects, but allows a filter function to be passed in to filter the
      resulting merges. This allows for scenarios where you want to merge "everything except that one thing" or
      "properties that start with data-". Note that this will shallow merge; it will not create new cloned values for
      target members.
    name: 'filteredAssign(isAllowed, target, args)'
    fullName: filteredAssign
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function filteredAssign(isAllowed: (propName: string) => boolean, target: any, ...args: any[]): any;'
      return:
        type:
          - any
        description: Resulting merged target.
      parameters:
        - id: isAllowed
          description: Callback to determine if the given propName is allowed in the result.
          type:
            - '(propName: string) => boolean'
        - id: target
          description: Target object to merge following object arguments into.
          type:
            - any
        - id: args
          description: One or more objects that will be mixed into the target in the order they are provided.
          type:
            - 'any[]'
  - uid: office-ui-fabric-react.find
    summary: Helper to find the first item within an array that satisfies the callback.
    name: 'find(array, cb)'
    fullName: find
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function find<T>(array: T[], cb: (item: T, index: number) => boolean): T | undefined;'
      return:
        type:
          - T | undefined
        description: ''
      parameters:
        - id: array
          description: Array to search
          type:
            - 'T[]'
        - id: cb
          description: Callback which returns true on matches
          type:
            - '(item: T, index: number) => boolean'
  - uid: office-ui-fabric-react.findElementRecursive
    summary: Finds the first parent element where the matchFunction returns true
    name: 'findElementRecursive(element, matchFunction)'
    fullName: findElementRecursive
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function findElementRecursive(element: HTMLElement | null, matchFunction: (element: HTMLElement) =>
        boolean): HTMLElement | null;
      return:
        type:
          - HTMLElement | null
        description: the matched element or null no match was found
      parameters:
        - id: element
          description: element to start searching at
          type:
            - HTMLElement | null
        - id: matchFunction
          description: the function that determines if the element is a match
          type:
            - '(element: HTMLElement) => boolean'
  - uid: office-ui-fabric-react.findIndex
    summary: 'Helper to find the index of an item within an array, using a callback to determine the match.'
    name: 'findIndex(array, cb)'
    fullName: findIndex
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function findIndex<T>(array: T[], cb: (item: T, index: number) => boolean): number;'
      return:
        type:
          - number
        description: ''
      parameters:
        - id: array
          description: Array to search.
          type:
            - 'T[]'
        - id: cb
          description: Callback which returns true on matches.
          type:
            - '(item: T, index: number) => boolean'
  - uid: office-ui-fabric-react.findScrollableParent
    summary: 'Traverses up the DOM for the element with the data-is-scrollable=true attribute, or returns document.body.'
    name: findScrollableParent(startingElement)
    fullName: findScrollableParent
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function findScrollableParent(startingElement: HTMLElement | null): HTMLElement | null;'
      return:
        type:
          - HTMLElement | null
        description: ''
      parameters:
        - id: startingElement
          description: ''
          type:
            - HTMLElement | null
  - uid: office-ui-fabric-react.fitContentToBounds
    summary: >-
      Produces a proportionally-scaled version of an input content size when fit to a bounding size. Given a
      `contentSize` and a `boundsSize`<!-- -->, this function scales `contentSize` proportionally using either `contain`
      or `cover` fit behaviors. Use this function to pre-calculate the layout for the CSS `object-fit` and
      `background-fit` behaviors. With `contain`<!-- -->, the output size must be the largest it can be while completely
      within the `boundsSize`<!-- -->. With `cover`<!-- -->, the output size must be the smallest it can be while
      completely around the `boundsSize`<!-- -->. By default, there is a `maxScale` value of 1, which prevents the
      `contentSize` from being scaled larger.
    name: fitContentToBounds(options)
    fullName: fitContentToBounds
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function fitContentToBounds(options: IFitContentToBoundsOptions): ISize;'
      return:
        type:
          - office-ui-fabric-react.ISize
        description: ''
      parameters:
        - id: options
          description: the options for the bounds fit operation
          type:
            - office-ui-fabric-react.IFitContentToBoundsOptions
  - uid: office-ui-fabric-react.flatten
    summary: 'Given an array where each element is of type T or T\[\], flatten it into an array of T'
    name: flatten(array)
    fullName: flatten
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function flatten<T>(array: (T | T[])[]): T[];'
      return:
        type:
          - 'T[]'
        description: ''
      parameters:
        - id: array
          description: The array where each element can optionally also be an array
          type:
            - '(T | T[])[]'
  - uid: office-ui-fabric-react.focusAsync
    summary: >-
      Sets focus to an element asynchronously. The focus will be set at the next browser repaint, meaning it won't cause
      any extra recalculations. If more than one focusAsync is called during one frame, only the latest called
      focusAsync element will actually be focused
    name: focusAsync(element)
    fullName: focusAsync
    langs:
      - typeScript
    type: function
    syntax:
      content: |-
        export function focusAsync(element: HTMLElement | {
            focus: () => void;
        } | undefined | null): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: element
          description: The element to focus
          type:
            - |-
              HTMLElement | {
                  focus: () => void;
              } | undefined | null
  - uid: office-ui-fabric-react.focusClear
    summary: Generates style to clear browser specific focus styles.
    name: focusClear()
    fullName: focusClear
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function focusClear(): IRawStyle;'
      return:
        type:
          - office-ui-fabric-react.IRawStyle
        description: ''
  - uid: office-ui-fabric-react.focusFirstChild
    summary: Attempts to focus the first focusable element that is a child or child's child of the rootElement.
    name: focusFirstChild(rootElement)
    fullName: focusFirstChild
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function focusFirstChild(rootElement: HTMLElement): boolean;'
      return:
        type:
          - boolean
        description: 'True if focus was set, false if it was not.'
      parameters:
        - id: rootElement
          description: Element to start the search for a focusable child.
          type:
            - HTMLElement
  - uid: office-ui-fabric-react.fontFace
    summary: Registers a font face.
    name: fontFace(font)
    fullName: fontFace
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function fontFace(font: IFontFace): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: font
          description: ''
          type:
            - office-ui-fabric-react.IFontFace
  - uid: office-ui-fabric-react.format
    summary: >-
      String format method, used for scenarios where at runtime you need to evaluate a formatted string given a
      tokenized string. This usually only is needed in localization scenarios.
    name: 'format(s, values)'
    fullName: format
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function format(s: string, ...values: any[]): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: s
          description: ''
          type:
            - string
        - id: values
          description: ''
          type:
            - 'any[]'
  - uid: office-ui-fabric-react.getBackgroundShade
    name: 'getBackgroundShade(color, shade, isInverted)'
    fullName: getBackgroundShade
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getBackgroundShade(color: IColor, shade: Shade, isInverted?: boolean): IColor | null;'
      return:
        type:
          - IColor | null
        description: ''
      parameters:
        - id: color
          description: ''
          type:
            - office-ui-fabric-react.IColor
        - id: shade
          description: ''
          type:
            - office-ui-fabric-react.Shade
        - id: isInverted
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.getChildren
    summary: >-
      Gets the elements which are child elements of the given element. If `allowVirtualChildren` is `true`<!-- -->, this
      method enumerates virtual child elements after the original children.
    name: 'getChildren(parent, allowVirtualChildren)'
    fullName: getChildren
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getChildren(parent: HTMLElement, allowVirtualChildren?: boolean): HTMLElement[];'
      return:
        type:
          - 'HTMLElement[]'
        description: ''
      parameters:
        - id: parent
          description: The element to get the children of.
          type:
            - HTMLElement
        - id: allowVirtualChildren
          description: true if the method should enumerate virtual child elements.
          type:
            - boolean
  - uid: office-ui-fabric-react.getColorFromRGBA
    name: getColorFromRGBA(rgba)
    fullName: getColorFromRGBA
    langs:
      - typeScript
    type: function
    syntax:
      content: |-
        export function getColorFromRGBA(rgba: {
            r: number;
            g: number;
            b: number;
            a: number;
        }): IColor;
      return:
        type:
          - office-ui-fabric-react.IColor
        description: ''
      parameters:
        - id: rgba
          description: ''
          type:
            - |-
              {
                  r: number;
                  g: number;
                  b: number;
                  a: number;
              }
  - uid: office-ui-fabric-react.getColorFromString
    name: getColorFromString(inputColor)
    fullName: getColorFromString
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getColorFromString(inputColor: string): IColor | undefined;'
      return:
        type:
          - IColor | undefined
        description: ''
      parameters:
        - id: inputColor
          description: ''
          type:
            - string
  - uid: office-ui-fabric-react.getContrastRatio
    name: 'getContrastRatio(color1, color2)'
    fullName: getContrastRatio
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getContrastRatio(color1: IColor, color2: IColor): number;'
      return:
        type:
          - number
        description: ''
      parameters:
        - id: color1
          description: ''
          type:
            - office-ui-fabric-react.IColor
        - id: color2
          description: ''
          type:
            - office-ui-fabric-react.IColor
  - uid: office-ui-fabric-react.getDistanceBetweenPoints
    summary: Determines the distance between two points.
    name: 'getDistanceBetweenPoints(point1, point2)'
    fullName: getDistanceBetweenPoints
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getDistanceBetweenPoints(point1: IPoint, point2: IPoint): number;'
      return:
        type:
          - number
        description: ''
      parameters:
        - id: point1
          description: ''
          type:
            - office-ui-fabric-react.IPoint
        - id: point2
          description: ''
          type:
            - office-ui-fabric-react.IPoint
  - uid: office-ui-fabric-react.getDocument
    summary: Helper to get the document object.
    name: getDocument(rootElement)
    fullName: getDocument
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getDocument(rootElement?: HTMLElement | null): Document | undefined;'
      return:
        type:
          - Document | undefined
        description: ''
      parameters:
        - id: rootElement
          description: ''
          type:
            - HTMLElement | null
  - uid: office-ui-fabric-react.getFadedOverflowStyle
    summary: >-
      - Generates a style used to fade out an overflowing content by defining a style for an :after pseudo element. -
      Apply it to the :after selector for all combination of states the parent of content might have (normal, hover,
      selected, focus). - Requires the target to have position set to relative and overflow set to hidden.
    name: 'getFadedOverflowStyle(theme, color, direction, width, height)'
    fullName: getFadedOverflowStyle
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function getFadedOverflowStyle(theme: ITheme, color?: keyof ISemanticColors | keyof IPalette, direction?:
        'horizontal' | 'vertical', width?: string | number, height?: string | number): IRawStyle;
      return:
        type:
          - office-ui-fabric-react.IRawStyle
        description: The style object.
      parameters:
        - id: theme
          description: The theme object to use.
          type:
            - office-ui-fabric-react.ITheme
        - id: color
          description: >-
            The background color to fade out to. Accepts only keys of ISemanticColors or IPalette. Defaults to
            'bodyBackground'.
          type:
            - keyof ISemanticColors | keyof IPalette
        - id: direction
          description: The direction of the overflow. Defaults to horizontal.
          type:
            - '''horizontal'' | ''vertical'''
        - id: width
          description: The width of the fading overflow. Vertical direction defaults it to 100% vs 20px when horizontal.
          type:
            - string | number
        - id: height
          description: The Height of the fading overflow. Vertical direction defaults it to 50% vs 100% when horizontal.
          type:
            - string | number
  - uid: office-ui-fabric-react.getFirstFocusable
    summary: Gets the first focusable element.
    name: 'getFirstFocusable(rootElement, currentElement, includeElementsInFocusZones)'
    fullName: getFirstFocusable
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function getFirstFocusable(rootElement: HTMLElement, currentElement: HTMLElement,
        includeElementsInFocusZones?: boolean): HTMLElement | null;
      return:
        type:
          - HTMLElement | null
        description: ''
      parameters:
        - id: rootElement
          description: ''
          type:
            - HTMLElement
        - id: currentElement
          description: ''
          type:
            - HTMLElement
        - id: includeElementsInFocusZones
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.getFirstTabbable
    summary: >-
      Gets the first tabbable element. The difference between focusable and tabbable is that tabbable elements are
      focusable elements that also have tabIndex != -1.
    name: 'getFirstTabbable(rootElement, currentElement, includeElementsInFocusZones)'
    fullName: getFirstTabbable
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function getFirstTabbable(rootElement: HTMLElement, currentElement: HTMLElement,
        includeElementsInFocusZones?: boolean): HTMLElement | null;
      return:
        type:
          - HTMLElement | null
        description: ''
      parameters:
        - id: rootElement
          description: The parent element to search beneath.
          type:
            - HTMLElement
        - id: currentElement
          description: >-
            The descendant of rootElement to start the search at. This element is the first one checked, and iteration
            continues forward. Typical use passes rootElement.firstChild.
          type:
            - HTMLElement
        - id: includeElementsInFocusZones
          description: true if traversal should go into FocusZone descendants.
          type:
            - boolean
  - uid: office-ui-fabric-react.getFocusStyle
    summary: 'Generates a focus style which can be used to define an :after focus border.'
    name: 'getFocusStyle(theme, inset, position, highContrastStyle, borderColor, outlineColor, isFocusedOnly)'
    fullName: getFocusStyle
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function getFocusStyle(theme: ITheme, inset?: number, position?: 'relative' | 'absolute',
        highContrastStyle?: IRawStyle | undefined, borderColor?: string, outlineColor?: string, isFocusedOnly?:
        boolean): IRawStyle;
      return:
        type:
          - office-ui-fabric-react.IRawStyle
        description: The style object.
      parameters:
        - id: theme
          description: The theme object to use.
          type:
            - office-ui-fabric-react.ITheme
        - id: inset
          description: The number of pixels to inset the border.
          type:
            - number
        - id: position
          description: >-
            The positioning applied to the container. Must be 'relative' or 'absolute' so that the focus border can live
            around it.
          type:
            - '''relative'' | ''absolute'''
        - id: highContrastStyle
          description: Style for high contrast mode.
          type:
            - IRawStyle | undefined
        - id: borderColor
          description: Color of the border.
          type:
            - string
        - id: outlineColor
          description: Color of the outline.
          type:
            - string
        - id: isFocusedOnly
          description: If the styles should apply on focus or not.
          type:
            - boolean
  - uid: office-ui-fabric-react.getFullColorString
    name: getFullColorString(color)
    fullName: getFullColorString
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getFullColorString(color: IColor): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: color
          description: ''
          type:
            - office-ui-fabric-react.IColor
  - uid: office-ui-fabric-react.getGlobalClassNames
    summary: >-
      Checks for the `disableGlobalClassNames` property on the `theme` to determine if it should return `classNames`
      Note that calls to this function are memoized.
    name: 'getGlobalClassNames(classNames, theme, disableGlobalClassNames)'
    fullName: getGlobalClassNames
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function getGlobalClassNames<T>(classNames: GlobalClassNames<T>, theme: ITheme, disableGlobalClassNames?:
        boolean): Partial<GlobalClassNames<T>>;
      return:
        type:
          - Partial<GlobalClassNames<T>>
        description: ''
      parameters:
        - id: classNames
          description: >-
            The collection of global class names that apply when the flag is false. Make sure to pass in the same
            instance on each call to benefit from memoization.
          type:
            - GlobalClassNames<T>
        - id: theme
          description: The theme to check the flag on
          type:
            - office-ui-fabric-react.ITheme
        - id: disableGlobalClassNames
          description: Optional. Explicitly opt in/out of disabling global classnames. Defaults to false.
          type:
            - boolean
  - uid: office-ui-fabric-react.getIcon
    summary: >-
      Gets an icon definition. If an icon is requested but the subset has yet to be registered, it will get registered
      immediately.
    name: getIcon(name)
    fullName: getIcon
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getIcon(name?: string): IIconRecord | undefined;'
      return:
        type:
          - IIconRecord | undefined
        description: ''
      parameters:
        - id: name
          description: Name of icon.
          type:
            - string
  - uid: office-ui-fabric-react.getIconClassName
    summary: >-
      Gets an icon classname. You should be able to add this classname to an I tag with no additional classnames, and
      render the icon.
    name: getIconClassName(name)
    fullName: getIconClassName
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getIconClassName(name: string): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
  - uid: office-ui-fabric-react.getId
    summary: Generates a unique id in the global scope (this spans across duplicate copies of the same library.)
    name: getId(prefix)
    fullName: getId
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getId(prefix?: string): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: prefix
          description: ''
          type:
            - string
  - uid: office-ui-fabric-react.getInitials
    summary: Get (up to 2 characters) initials based on display name of the persona.
    name: 'getInitials(displayName, isRtl, allowPhoneInitials)'
    fullName: getInitials
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function getInitials(displayName: string | undefined | null, isRtl: boolean, allowPhoneInitials?:
        boolean): string;
      return:
        type:
          - string
        description: ''
      parameters:
        - id: displayName
          description: ''
          type:
            - string | undefined | null
        - id: isRtl
          description: ''
          type:
            - boolean
        - id: allowPhoneInitials
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.getLanguage
    summary: Gets the rtl state of the page (returns true if in rtl.)
    name: getLanguage()
    fullName: getLanguage
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getLanguage(): string | null;'
      return:
        type:
          - string | null
        description: ''
  - uid: office-ui-fabric-react.getLastFocusable
    summary: Gets the last focusable element.
    name: 'getLastFocusable(rootElement, currentElement, includeElementsInFocusZones)'
    fullName: getLastFocusable
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function getLastFocusable(rootElement: HTMLElement, currentElement: HTMLElement,
        includeElementsInFocusZones?: boolean): HTMLElement | null;
      return:
        type:
          - HTMLElement | null
        description: ''
      parameters:
        - id: rootElement
          description: ''
          type:
            - HTMLElement
        - id: currentElement
          description: ''
          type:
            - HTMLElement
        - id: includeElementsInFocusZones
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.getLastTabbable
    summary: >-
      Gets the last tabbable element. The difference between focusable and tabbable is that tabbable elements are
      focusable elements that also have tabIndex != -1.
    name: 'getLastTabbable(rootElement, currentElement, includeElementsInFocusZones)'
    fullName: getLastTabbable
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function getLastTabbable(rootElement: HTMLElement, currentElement: HTMLElement,
        includeElementsInFocusZones?: boolean): HTMLElement | null;
      return:
        type:
          - HTMLElement | null
        description: ''
      parameters:
        - id: rootElement
          description: The parent element to search beneath.
          type:
            - HTMLElement
        - id: currentElement
          description: >-
            The descendant of rootElement to start the search at. This element is the first one checked, and iteration
            continues in reverse. Typical use passes rootElement.lastChild.
          type:
            - HTMLElement
        - id: includeElementsInFocusZones
          description: true if traversal should go into FocusZone descendants.
          type:
            - boolean
  - uid: office-ui-fabric-react.getNativeProps
    summary: >-
      Gets native supported props for an html element provided the allowance set. Use one of the property sets defined
      (divProperties, buttonPropertes, etc) to filter out supported properties from a given props set. Note that all
      data- and aria- prefixed attributes will be allowed. NOTE: getNativeProps should always be applied first when
      adding props to a react component. The non-native props should be applied second. This will prevent getNativeProps
      from overriding your custom props. For example, if props passed to getNativeProps has an onClick function and
      getNativeProps is added to the component after an onClick function is added, then the getNativeProps onClick will
      override it.
    name: 'getNativeProps(props, allowedPropNames, excludedPropNames)'
    fullName: getNativeProps
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getNativeProps<T>(props: {}, allowedPropNames: string[], excludedPropNames?: string[]): T;'
      return:
        type:
          - T
        description: The filtered props
      parameters:
        - id: props
          description: The unfiltered input props
          type:
            - '{}'
        - id: allowedPropNames
          description: ''
          type:
            - 'string[]'
        - id: excludedPropNames
          description: ''
          type:
            - 'string[]'
  - uid: office-ui-fabric-react.getNextElement
    summary: 'Traverse to find the next focusable element. If tabbable is true, the element must have tabIndex != -1.'
    name: >-
      getNextElement(rootElement, currentElement, checkNode, suppressParentTraversal, suppressChildTraversal,
      includeElementsInFocusZones, allowFocusRoot, tabbable)
    fullName: getNextElement
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function getNextElement(rootElement: HTMLElement, currentElement: HTMLElement | null, checkNode?:
        boolean, suppressParentTraversal?: boolean, suppressChildTraversal?: boolean, includeElementsInFocusZones?:
        boolean, allowFocusRoot?: boolean, tabbable?: boolean): HTMLElement | null;
      return:
        type:
          - HTMLElement | null
        description: ''
      parameters:
        - id: rootElement
          description: ''
          type:
            - HTMLElement
        - id: currentElement
          description: ''
          type:
            - HTMLElement | null
        - id: checkNode
          description: ''
          type:
            - boolean
        - id: suppressParentTraversal
          description: ''
          type:
            - boolean
        - id: suppressChildTraversal
          description: ''
          type:
            - boolean
        - id: includeElementsInFocusZones
          description: ''
          type:
            - boolean
        - id: allowFocusRoot
          description: ''
          type:
            - boolean
        - id: tabbable
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.getParent
    summary: >-
      Gets the element which is the parent of a given element. If `allowVirtuaParents` is `true`<!-- -->, this method
      prefers the virtual parent over real DOM parent when present.
    name: 'getParent(child, allowVirtualParents)'
    fullName: getParent
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getParent(child: HTMLElement, allowVirtualParents?: boolean): HTMLElement | null;'
      return:
        type:
          - HTMLElement | null
        description: ''
      parameters:
        - id: child
          description: ''
          type:
            - HTMLElement
        - id: allowVirtualParents
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.getPreviousElement
    summary: 'Traverse to find the previous element. If tabbable is true, the element must have tabIndex != -1.'
    name: >-
      getPreviousElement(rootElement, currentElement, checkNode, suppressParentTraversal, traverseChildren,
      includeElementsInFocusZones, allowFocusRoot, tabbable)
    fullName: getPreviousElement
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function getPreviousElement(rootElement: HTMLElement, currentElement: HTMLElement | null, checkNode?:
        boolean, suppressParentTraversal?: boolean, traverseChildren?: boolean, includeElementsInFocusZones?: boolean,
        allowFocusRoot?: boolean, tabbable?: boolean): HTMLElement | null;
      return:
        type:
          - HTMLElement | null
        description: ''
      parameters:
        - id: rootElement
          description: ''
          type:
            - HTMLElement
        - id: currentElement
          description: ''
          type:
            - HTMLElement | null
        - id: checkNode
          description: ''
          type:
            - boolean
        - id: suppressParentTraversal
          description: ''
          type:
            - boolean
        - id: traverseChildren
          description: ''
          type:
            - boolean
        - id: includeElementsInFocusZones
          description: ''
          type:
            - boolean
        - id: allowFocusRoot
          description: ''
          type:
            - boolean
        - id: tabbable
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.getRect
    summary: 'Helper to get bounding client rect, works with window.'
    name: getRect(element)
    fullName: getRect
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getRect(element: HTMLElement | Window | null): IRectangle | undefined;'
      return:
        type:
          - IRectangle | undefined
        description: ''
      parameters:
        - id: element
          description: ''
          type:
            - HTMLElement | Window | null
  - uid: office-ui-fabric-react.getResourceUrl
    summary: Sets the current base url used for fetching images.
    name: getResourceUrl(url)
    fullName: getResourceUrl
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getResourceUrl(url: string): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: url
          description: ''
          type:
            - string
  - uid: office-ui-fabric-react.getRTL
    summary: Gets the rtl state of the page (returns true if in rtl.)
    name: getRTL()
    fullName: getRTL
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getRTL(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: office-ui-fabric-react.getRTLSafeKeyCode
    summary: 'Returns the given key, but flips right/left arrows if necessary.'
    name: getRTLSafeKeyCode(key)
    fullName: getRTLSafeKeyCode
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getRTLSafeKeyCode(key: number): number;'
      return:
        type:
          - number
        description: ''
      parameters:
        - id: key
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.getScreenSelector
    name: 'getScreenSelector(min, max)'
    fullName: getScreenSelector
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getScreenSelector(min: number, max: number): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: min
          description: ''
          type:
            - number
        - id: max
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.getScrollbarWidth
    summary: Calculates the width of a scrollbar for the browser/os.
    name: getScrollbarWidth()
    fullName: getScrollbarWidth
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getScrollbarWidth(): number;'
      return:
        type:
          - number
        description: ''
  - uid: office-ui-fabric-react.getShade
    summary: >-
      Given a color and a shade specification, generates the requested shade of the color. Logic: if white darken via
      tables defined above if black lighten if light strongen if dark soften else default soften or strongen depending
      on shade\#
    name: 'getShade(color, shade, isInverted)'
    fullName: getShade
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getShade(color: IColor, shade: Shade, isInverted?: boolean): IColor | null;'
      return:
        type:
          - IColor | null
        description: ''
      parameters:
        - id: color
          description: The base color whose shade is to be computed
          type:
            - office-ui-fabric-react.IColor
        - id: shade
          description: The shade of the base color to compute
          type:
            - office-ui-fabric-react.Shade
        - id: isInverted
          description: Default false. Whether the given theme is inverted (reverse strongen/soften logic)
          type:
            - boolean
  - uid: office-ui-fabric-react.getSubmenuItems
    name: getSubmenuItems(item)
    fullName: getSubmenuItems
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getSubmenuItems(item: IContextualMenuItem): any;'
      return:
        type:
          - any
        description: ''
      parameters:
        - id: item
          description: ''
          type:
            - office-ui-fabric-react.IContextualMenuItem
  - uid: office-ui-fabric-react.getTheme
    summary: Gets the theme object
    name: getTheme(depComments)
    fullName: getTheme
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getTheme(depComments?: boolean): ITheme;'
      return:
        type:
          - office-ui-fabric-react.ITheme
        description: ''
      parameters:
        - id: depComments
          description: Whether to include deprecated tags as comments for deprecated slots.
          type:
            - boolean
  - uid: office-ui-fabric-react.getVirtualParent
    summary: 'Gets the virtual parent given the child element, if it exists.'
    name: getVirtualParent(child)
    fullName: getVirtualParent
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getVirtualParent(child: HTMLElement): HTMLElement | undefined;'
      return:
        type:
          - HTMLElement | undefined
        description: ''
      parameters:
        - id: child
          description: ''
          type:
            - HTMLElement
  - uid: office-ui-fabric-react.getWindow
    summary: Helper to get the window object.
    name: getWindow(rootElement)
    fullName: getWindow
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function getWindow(rootElement?: Element | null): Window | undefined;'
      return:
        type:
          - Window | undefined
        description: ''
      parameters:
        - id: rootElement
          description: ''
          type:
            - Element | null
  - uid: office-ui-fabric-react.hasHorizontalOverflow
    summary: Detects whether an element's content has horizontal overflow
    name: hasHorizontalOverflow(element)
    fullName: hasHorizontalOverflow
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function hasHorizontalOverflow(element: HTMLElement): boolean;'
      return:
        type:
          - boolean
        description: True if element's content overflows
      parameters:
        - id: element
          description: Element to check for overflow
          type:
            - HTMLElement
  - uid: office-ui-fabric-react.hasOverflow
    summary: Detects whether an element's content has overflow in any direction
    name: hasOverflow(element)
    fullName: hasOverflow
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function hasOverflow(element: HTMLElement): boolean;'
      return:
        type:
          - boolean
        description: True if element's content overflows
      parameters:
        - id: element
          description: Element to check for overflow
          type:
            - HTMLElement
  - uid: office-ui-fabric-react.hasVerticalOverflow
    summary: Detects whether an element's content has vertical overflow
    name: hasVerticalOverflow(element)
    fullName: hasVerticalOverflow
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function hasVerticalOverflow(element: HTMLElement): boolean;'
      return:
        type:
          - boolean
        description: True if element's content overflows
      parameters:
        - id: element
          description: Element to check for overflow
          type:
            - HTMLElement
  - uid: office-ui-fabric-react.hoistMethods
    summary: 'Allows you to hoist methods, except those in an exclusion set from a source object into a destination object.'
    name: 'hoistMethods(destination, source, exclusions)'
    fullName: hoistMethods
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function hoistMethods(destination: any, source: any, exclusions?: string[]): string[];'
      return:
        type:
          - 'string[]'
        description: An array of names of methods that were hoisted.
      parameters:
        - id: destination
          description: The instance of the object to hoist the methods onto.
          type:
            - any
        - id: source
          description: The instance of the object where the methods are hoisted from.
          type:
            - any
        - id: exclusions
          description: (Optional) What methods to exclude from being hoisted.
          type:
            - 'string[]'
  - uid: office-ui-fabric-react.hoistStatics
    summary: >-
      Allows you to hoist static functions in components. Created for the purpose of fixing broken static functions in
      classes that utilize decorators.
    name: 'hoistStatics(source, dest)'
    fullName: hoistStatics
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function hoistStatics<TSource, TDest>(source: TSource, dest: TDest): TDest;'
      return:
        type:
          - TDest
        description: The dest object with methods added
      parameters:
        - id: source
          description: The object where the methods are hoisted from.
          type:
            - TSource
        - id: dest
          description: The object to hoist the methods onto.
          type:
            - TDest
  - uid: office-ui-fabric-react.hsl2hsv
    name: 'hsl2hsv(h, s, l)'
    fullName: hsl2hsv
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function hsl2hsv(h: number, s: number, l: number): IHSV;'
      return:
        type:
          - office-ui-fabric-react.IHSV
        description: ''
      parameters:
        - id: h
          description: ''
          type:
            - number
        - id: s
          description: ''
          type:
            - number
        - id: l
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.hsl2rgb
    name: 'hsl2rgb(h, s, l)'
    fullName: hsl2rgb
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function hsl2rgb(h: number, s: number, l: number): IRGB;'
      return:
        type:
          - office-ui-fabric-react.IRGB
        description: ''
      parameters:
        - id: h
          description: ''
          type:
            - number
        - id: s
          description: ''
          type:
            - number
        - id: l
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.hsv2hex
    name: 'hsv2hex(h, s, v)'
    fullName: hsv2hex
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function hsv2hex(h: number, s: number, v: number): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: h
          description: ''
          type:
            - number
        - id: s
          description: ''
          type:
            - number
        - id: v
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.hsv2hsl
    name: 'hsv2hsl(h, s, v)'
    fullName: hsv2hsl
    langs:
      - typeScript
    type: function
    syntax:
      content: |-
        export function hsv2hsl(h: number, s: number, v: number): {
            h: number;
            s: number;
            l: number;
        };
      return:
        type:
          - |-
            {
                h: number;
                s: number;
                l: number;
            }
        description: ''
      parameters:
        - id: h
          description: ''
          type:
            - number
        - id: s
          description: ''
          type:
            - number
        - id: v
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.hsv2rgb
    name: 'hsv2rgb(h, s, v)'
    fullName: hsv2rgb
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function hsv2rgb(h: number, s: number, v: number): IRGB;'
      return:
        type:
          - office-ui-fabric-react.IRGB
        description: ''
      parameters:
        - id: h
          description: ''
          type:
            - number
        - id: s
          description: ''
          type:
            - number
        - id: v
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.initializeFocusRects
    summary: >-
      Initializes the logic which:


      1. Subscribes keydown and mousedown events. (It will only do it once per window, so it's safe to call this method
      multiple times.) 2. When the user presses directional keyboard keys, adds the 'ms-Fabric--isFocusVisible'
      classname to the document body. 3. When the user clicks a mouse button, we remove the classname if it exists.


      This logic allows components on the page to conditionally render focus treatments only if the global classname
      exists, which simplifies logic overall.
    name: initializeFocusRects(window)
    fullName: initializeFocusRects
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function initializeFocusRects(window?: Window): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: window
          description: the window used to add the event listeners
          type:
            - Window
  - uid: office-ui-fabric-react.initializeIcons
    name: 'initializeIcons(baseUrl, options)'
    fullName: initializeIcons
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function initializeIcons(baseUrl?: string, options?: IIconOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: baseUrl
          description: ''
          type:
            - string
        - id: options
          description: ''
          type:
            - office-ui-fabric-react.IIconOptions
  - uid: office-ui-fabric-react.isDark
    name: isDark(color)
    fullName: isDark
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function isDark(color: IColor): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: color
          description: ''
          type:
            - office-ui-fabric-react.IColor
  - uid: office-ui-fabric-react.isDirectionalKeyCode
    summary: Returns true if the keycode is a directional keyboard key.
    name: isDirectionalKeyCode(which)
    fullName: isDirectionalKeyCode
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function isDirectionalKeyCode(which: number): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: which
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.isElementFocusSubZone
    summary: Determines if a given element is a focus sub zone.
    name: isElementFocusSubZone(element)
    fullName: isElementFocusSubZone
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function isElementFocusSubZone(element?: HTMLElement): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: element
          description: ''
          type:
            - HTMLElement
  - uid: office-ui-fabric-react.isElementFocusZone
    summary: Determines if a given element is a focus zone.
    name: isElementFocusZone(element)
    fullName: isElementFocusZone
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function isElementFocusZone(element?: HTMLElement): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: element
          description: ''
          type:
            - HTMLElement
  - uid: office-ui-fabric-react.isElementTabbable
    summary: >-
      Determines if an element can receive focus programmatically or via a mouse click. If checkTabIndex is true,
      additionally checks to ensure the element can be focused with the tab key, meaning tabIndex != -1.
    name: 'isElementTabbable(element, checkTabIndex)'
    fullName: isElementTabbable
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function isElementTabbable(element: HTMLElement, checkTabIndex?: boolean): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: element
          description: ''
          type:
            - HTMLElement
        - id: checkTabIndex
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.isElementVisible
    summary: Determines if an element is visible.
    name: isElementVisible(element)
    fullName: isElementVisible
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function isElementVisible(element: HTMLElement | undefined | null): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: element
          description: ''
          type:
            - HTMLElement | undefined | null
  - uid: office-ui-fabric-react.isMac
    summary: Returns true if the user is on a Mac. Caches the result value.
    name: isMac(reset)
    fullName: isMac
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function isMac(reset?: boolean): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: reset
          description: Reset the cached result value (mainly for testing).
          type:
            - boolean
  - uid: office-ui-fabric-react.isRelativeUrl
    name: isRelativeUrl(url)
    fullName: isRelativeUrl
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function isRelativeUrl(url: string): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: url
          description: ''
          type:
            - string
  - uid: office-ui-fabric-react.isValidShade
    summary: Returns true if the argument is a valid Shade value
    name: isValidShade(shade)
    fullName: isValidShade
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function isValidShade(shade?: Shade): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: shade
          description: The Shade value to validate.
          type:
            - office-ui-fabric-react.Shade
  - uid: office-ui-fabric-react.keyframes
    summary: Registers keyframe definitions.
    name: keyframes(timeline)
    fullName: keyframes
    langs:
      - typeScript
    type: function
    syntax:
      content: |-
        export function keyframes(timeline: {
            [key: string]: {};
        }): string;
      return:
        type:
          - string
        description: ''
      parameters:
        - id: timeline
          description: ''
          type:
            - |-
              {
                  [key: string]: {};
              }
  - uid: office-ui-fabric-react.loadTheme
    summary: 'Applies the theme, while filling in missing slots.'
    name: 'loadTheme(theme, depComments)'
    fullName: loadTheme
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function loadTheme(theme: IPartialTheme, depComments?: boolean): ITheme;'
      return:
        type:
          - office-ui-fabric-react.ITheme
        description: ''
      parameters:
        - id: theme
          description: Partial theme object.
          type:
            - IPartialTheme
        - id: depComments
          description: Whether to include deprecated tags as comments for deprecated slots.
          type:
            - boolean
  - uid: office-ui-fabric-react.mapEnumByName
    name: 'mapEnumByName(theEnum, callback)'
    fullName: mapEnumByName
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function mapEnumByName<T>(theEnum: any, callback: (name?: string, value?: string | number) => T |
        undefined): (T | undefined)[] | undefined;
      return:
        type:
          - '(T | undefined)[] | undefined'
        description: ''
      parameters:
        - id: theEnum
          description: ''
          type:
            - any
        - id: callback
          description: ''
          type:
            - '(name?: string, value?: string | number) => T | undefined'
  - uid: office-ui-fabric-react.memoize
    summary: >-
      Memoize decorator to be used on class methods. Note that the "this" reference will be inaccessible within a
      memoized method, given that a cached method's this would not be instance specific.
    name: 'memoize(target, key, descriptor)'
    fullName: memoize
    langs:
      - typeScript
    type: function
    syntax:
      content: |-
        export function memoize<T extends Function>(target: any, key: string, descriptor: TypedPropertyDescriptor<T>): {
            configurable: boolean;
            get(): T;
        };
      return:
        type:
          - |-
            {
                configurable: boolean;
                get(): T;
            }
        description: ''
      parameters:
        - id: target
          description: ''
          type:
            - any
        - id: key
          description: ''
          type:
            - string
        - id: descriptor
          description: ''
          type:
            - TypedPropertyDescriptor<T>
  - uid: office-ui-fabric-react.memoizeFunction
    summary: >-
      Memoizes a function; when you pass in the same parameters multiple times, it returns a cached result. Be careful
      when passing in objects, you need to pass in the same INSTANCE for caching to work. Otherwise it will grow the
      cache unnecessarily. Also avoid using default values that evaluate functions; passing in undefined for a value and
      relying on a default function will execute it the first time, but will not re-evaluate subsequent times which may
      have been unexpected.


      By default, the cache will reset after 100 permutations, to avoid abuse cases where the function is unintendedly
      called with unique objects. Without a reset, the cache could grow infinitely, so we safeguard by resetting. To
      override this behavior, pass a value of 0 to the maxCacheSize parameter.
    name: 'memoizeFunction(cb, maxCacheSize)'
    fullName: memoizeFunction
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function memoizeFunction<T extends (...args: any[]) => RET_TYPE, RET_TYPE>(cb: T, maxCacheSize?: number):
        T;
      return:
        type:
          - T
        description: A memoized version of the function.
      parameters:
        - id: cb
          description: The function to memoize.
          type:
            - T
        - id: maxCacheSize
          description: 'Max results to cache. If the cache exceeds this value, it will reset on the next call.'
          type:
            - number
  - uid: office-ui-fabric-react.merge
    summary: >-
      Simple deep merge function. Takes all arguments and returns a deep copy of the objects merged together in the
      order provided. If an object creates a circular reference, it will assign the original reference.
    name: 'merge(target, args)'
    fullName: merge
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function merge<T = {}>(target: Partial<T>, ...args: (Partial<T> | null | undefined | false)[]): T;'
      return:
        type:
          - T
        description: ''
      parameters:
        - id: target
          description: ''
          type:
            - Partial<T>
        - id: args
          description: ''
          type:
            - '(Partial<T> | null | undefined | false)[]'
  - uid: office-ui-fabric-react.mergeAriaAttributeValues
    summary: >-
      ARIA helper to concatenate attributes, returning undefined if all attributes are undefined. (Empty strings are not
      a valid ARIA attribute value.)


      NOTE: This function will NOT insert whitespace between provided attributes.
    name: mergeAriaAttributeValues(ariaAttributes)
    fullName: mergeAriaAttributeValues
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function mergeAriaAttributeValues(...ariaAttributes: (string | undefined)[]): string | undefined;'
      return:
        type:
          - string | undefined
        description: ''
      parameters:
        - id: ariaAttributes
          description: ARIA attributes to merge
          type:
            - '(string | undefined)[]'
  - uid: office-ui-fabric-react.mergeCustomizations
    summary: >-
      Merge props and customizations giving priority to props over context. NOTE: This function will always perform
      multiple merge operations. Use with caution.
    name: 'mergeCustomizations(props, parentContext)'
    fullName: mergeCustomizations
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function mergeCustomizations(props: ICustomizerProps, parentContext: ICustomizerContext):
        ICustomizerContext;
      return:
        type:
          - office-ui-fabric-react.ICustomizerContext
        description: Merged customizations.
      parameters:
        - id: props
          description: New settings to merge in.
          type:
            - ICustomizerProps
        - id: parentContext
          description: Context containing current settings.
          type:
            - office-ui-fabric-react.ICustomizerContext
  - uid: office-ui-fabric-react.mergeSettings
    summary: >-
      Merge new and old settings, giving priority to new settings. New settings is optional in which case oldSettings is
      returned as-is.
    name: 'mergeSettings(oldSettings, newSettings)'
    fullName: mergeSettings
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function mergeSettings(oldSettings?: Settings, newSettings?: Settings | SettingsFunction): Settings;'
      return:
        type:
          - Settings
        description: Merged settings.
      parameters:
        - id: oldSettings
          description: Old settings to fall back to.
          type:
            - Settings
        - id: newSettings
          description: New settings that will be merged over oldSettings.
          type:
            - Settings | SettingsFunction
  - uid: office-ui-fabric-react.mergeStyles
    summary: 'Concatination helper, which can merge class names together. Skips over falsey values.'
    name: mergeStyles(args)
    fullName: mergeStyles
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function mergeStyles(...args: (IStyle | IStyleBaseArray | false | null | undefined)[]): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: args
          description: ''
          type:
            - '(IStyle | IStyleBaseArray | false | null | undefined)[]'
  - uid: office-ui-fabric-react.mergeStyleSets
    summary: >-
      Takes in one or more style set objects, each consisting of a set of areas, each which will produce a class name.
      Using this is analogous to calling `mergeStyles` for each property in the object, but ensures we maintain the set
      ordering when multiple style sets are merged.
    name: mergeStyleSets(styleSets)
    fullName: mergeStyleSets
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function mergeStyleSets(...styleSets: Array<IStyleSet<any> | undefined | false | null>):
        IProcessedStyleSet<any>;
      return:
        type:
          - IProcessedStyleSet<any>
        description: ''
      parameters:
        - id: styleSets
          description: One or more style sets to be merged.
          type:
            - Array<IStyleSet<any> | undefined | false | null>
  - uid: office-ui-fabric-react.nullRender
    summary: 'Simple constant function for returning null, used to render empty templates in JSX.'
    name: nullRender()
    fullName: nullRender
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function nullRender(): JSX.Element | null;'
      return:
        type:
          - JSX.Element | null
        description: ''
  - uid: office-ui-fabric-react.portalContainsElement
    summary: >-
      Determine whether a target is within a portal from perspective of root or optional parent. This function only
      works against portal components that use the setPortalAttribute function. If both parent and child are within the
      same portal this function will return false.
    name: 'portalContainsElement(target, parent)'
    fullName: portalContainsElement
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function portalContainsElement(target: HTMLElement, parent?: HTMLElement): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: target
          description: Element to query portal containment status of.
          type:
            - HTMLElement
        - id: parent
          description: >-
            Optional parent perspective. Search for containing portal stops at parent (or root if parent is undefined or
            invalid.)
          type:
            - HTMLElement
  - uid: office-ui-fabric-react.precisionRound
    summary: Rounds a number to a certain level of precision. Accepts negative precision.
    name: 'precisionRound(value, precision, base)'
    fullName: precisionRound
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function precisionRound(value: number, precision: number, base?: number): number;'
      return:
        type:
          - number
        description: ''
      parameters:
        - id: value
          description: The value that is being rounded.
          type:
            - number
        - id: precision
          description: The number of decimal places to round the number to
          type:
            - number
        - id: base
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.provideContext
    name: 'provideContext(contextTypes, mapPropsToContext)'
    fullName: provideContext
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function provideContext<TContext, TProps>(contextTypes: PropTypes.ValidationMap<TContext>,
        mapPropsToContext: (props: TProps) => TContext): React.ComponentType<TProps>;
      return:
        type:
          - React.ComponentType<TProps>
        description: ''
      parameters:
        - id: contextTypes
          description: ''
          type:
            - PropTypes.ValidationMap<TContext>
        - id: mapPropsToContext
          description: ''
          type:
            - '(props: TProps) => TContext'
  - uid: office-ui-fabric-react.registerDefaultFontFaces
    name: registerDefaultFontFaces(baseUrl)
    fullName: registerDefaultFontFaces
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function registerDefaultFontFaces(baseUrl: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: baseUrl
          description: ''
          type:
            - string
  - uid: office-ui-fabric-react.registerIconAlias
    summary: Remaps one icon name to another.
    name: 'registerIconAlias(iconName, mappedToName)'
    fullName: registerIconAlias
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function registerIconAlias(iconName: string, mappedToName: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: iconName
          description: ''
          type:
            - string
        - id: mappedToName
          description: ''
          type:
            - string
  - uid: office-ui-fabric-react.registerIcons
    summary: Registers a given subset of icons.
    name: 'registerIcons(iconSubset, options)'
    fullName: registerIcons
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function registerIcons(iconSubset: IIconSubset, options?: Partial<IIconOptions>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: iconSubset
          description: the icon subset definition.
          type:
            - office-ui-fabric-react.IIconSubset
        - id: options
          description: ''
          type:
            - Partial<IIconOptions>
  - uid: office-ui-fabric-react.registerOnThemeChangeCallback
    summary: >-
      Registers a callback that gets called whenever the theme changes. This should only be used when the component
      cannot automatically get theme changes through its state. This will not register duplicate callbacks.
    name: registerOnThemeChangeCallback(callback)
    fullName: registerOnThemeChangeCallback
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function registerOnThemeChangeCallback(callback: (theme: ITheme) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: ''
          type:
            - '(theme: ITheme) => void'
  - uid: office-ui-fabric-react.removeIndex
    summary: 'Given an array, it returns a new array that does not contain the item at the given index.'
    name: 'removeIndex(array, index)'
    fullName: removeIndex
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function removeIndex<T>(array: T[], index: number): T[];'
      return:
        type:
          - 'T[]'
        description: ''
      parameters:
        - id: array
          description: The array to operate on
          type:
            - 'T[]'
        - id: index
          description: The index of the element to remove
          type:
            - number
  - uid: office-ui-fabric-react.removeOnThemeChangeCallback
    summary: See registerOnThemeChangeCallback(). Removes previously registered callbacks.
    name: removeOnThemeChangeCallback(callback)
    fullName: removeOnThemeChangeCallback
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function removeOnThemeChangeCallback(callback: (theme: ITheme) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: ''
          type:
            - '(theme: ITheme) => void'
  - uid: office-ui-fabric-react.replaceElement
    summary: 'Given an array, this function returns a new array where the element at a given index has been replaced.'
    name: 'replaceElement(array, newElement, index)'
    fullName: replaceElement
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function replaceElement<T>(array: T[], newElement: T, index: number): T[];'
      return:
        type:
          - 'T[]'
        description: ''
      parameters:
        - id: array
          description: The array to operate on
          type:
            - 'T[]'
        - id: newElement
          description: The element that will be placed in the new array
          type:
            - T
        - id: index
          description: The index of the element that should be replaced
          type:
            - number
  - uid: office-ui-fabric-react.resetIds
    summary: Resets id counter to an (optional) number.
    name: resetIds(counter)
    fullName: resetIds
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function resetIds(counter?: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: counter
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.resetMemoizations
    summary: Reset memoizations.
    name: resetMemoizations()
    fullName: resetMemoizations
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function resetMemoizations(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office-ui-fabric-react.rgb2hex
    name: 'rgb2hex(r, g, b)'
    fullName: rgb2hex
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function rgb2hex(r: number, g: number, b: number): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: r
          description: ''
          type:
            - number
        - id: g
          description: ''
          type:
            - number
        - id: b
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.rgb2hsv
    name: 'rgb2hsv(r, g, b)'
    fullName: rgb2hsv
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function rgb2hsv(r: number, g: number, b: number): IHSV;'
      return:
        type:
          - office-ui-fabric-react.IHSV
        description: ''
      parameters:
        - id: r
          description: ''
          type:
            - number
        - id: g
          description: ''
          type:
            - number
        - id: b
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.setBaseUrl
    summary: Gets the current base url used for fetching images.
    name: setBaseUrl(baseUrl)
    fullName: setBaseUrl
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function setBaseUrl(baseUrl: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: baseUrl
          description: ''
          type:
            - string
  - uid: office-ui-fabric-react.setIconOptions
    summary: Sets the icon options.
    name: setIconOptions(options)
    fullName: setIconOptions
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function setIconOptions(options: Partial<IIconOptions>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: ''
          type:
            - Partial<IIconOptions>
  - uid: office-ui-fabric-react.setLanguage
    summary: Sets the rtl state of the page (by adjusting the dir attribute of the html element.)
    name: 'setLanguage(language, avoidPersisting)'
    fullName: setLanguage
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function setLanguage(language: string, avoidPersisting?: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: language
          description: ''
          type:
            - string
        - id: avoidPersisting
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.setPortalAttribute
    summary: Identify element as a portal by setting an attribute.
    name: setPortalAttribute(element)
    fullName: setPortalAttribute
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function setPortalAttribute(element: HTMLElement): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: element
          description: Element to mark as a portal.
          type:
            - HTMLElement
  - uid: office-ui-fabric-react.setRTL
    summary: Sets the rtl state of the page (by adjusting the dir attribute of the html element.)
    name: 'setRTL(isRTL, persistSetting)'
    fullName: setRTL
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function setRTL(isRTL: boolean, persistSetting?: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: isRTL
          description: ''
          type:
            - boolean
        - id: persistSetting
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.setSSR
    summary: Helper to set ssr mode to simulate no window object returned from getWindow helper.
    name: setSSR(isEnabled)
    fullName: setSSR
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function setSSR(isEnabled: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: isEnabled
          description: ''
          type:
            - boolean
  - uid: office-ui-fabric-react.setVirtualParent
    summary: Sets the virtual parent of an element. Pass `undefined` as the `parent` to clear the virtual parent.
    name: 'setVirtualParent(child, parent)'
    fullName: setVirtualParent
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function setVirtualParent(child: HTMLElement, parent: HTMLElement): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: child
          description: ''
          type:
            - HTMLElement
        - id: parent
          description: ''
          type:
            - HTMLElement
  - uid: office-ui-fabric-react.setWarningCallback
    summary: Configures the warning callback. Passing in undefined will reset it to use the default console.warn function.
    name: setWarningCallback(warningCallback)
    fullName: setWarningCallback
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function setWarningCallback(warningCallback?: (message: string) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: warningCallback
          description: Callback to override the generated warnings.
          type:
            - '(message: string) => void'
  - uid: office-ui-fabric-react.shallowCompare
    summary: Compares a to b and b to a.
    name: 'shallowCompare(a, b)'
    fullName: shallowCompare
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function shallowCompare<TA, TB>(a: TA, b: TB): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: a
          description: ''
          type:
            - TA
        - id: b
          description: ''
          type:
            - TB
  - uid: office-ui-fabric-react.shouldWrapFocus
    summary: 'Determines if an, or any of its ancestors, sepcificies that it doesn''t want focus to wrap'
    name: 'shouldWrapFocus(element, noWrapDataAttribute)'
    fullName: shouldWrapFocus
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function shouldWrapFocus(element: HTMLElement, noWrapDataAttribute: 'data-no-vertical-wrap' |
        'data-no-horizontal-wrap'): boolean;
      return:
        type:
          - boolean
        description: 'true if focus should wrap, false otherwise'
      parameters:
        - id: element
          description: element to start searching from
          type:
            - HTMLElement
        - id: noWrapDataAttribute
          description: the no wrap data attribute to match (either)
          type:
            - '''data-no-vertical-wrap'' | ''data-no-horizontal-wrap'''
  - uid: office-ui-fabric-react.styled
    summary: >-
      The styled HOC wrapper allows you to create a functional wrapper around a given component which will resolve
      getStyles functional props, and mix customized props passed in using concatStyleSets.
    name: 'styled(Component, baseStyles, getProps, customizable)'
    fullName: styled
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function styled<TComponentProps extends IPropsWithStyles<TStyleProps, TStyleSet>, TStyleProps, TStyleSet
        extends IStyleSet<TStyleSet>>(Component: React.ComponentClass<TComponentProps> |
        React.StatelessComponent<TComponentProps>, baseStyles: IStyleFunctionOrObject<TStyleProps, TStyleSet>,
        getProps?: (props: TComponentProps) => Partial<TComponentProps>, customizable?: ICustomizableProps): (props:
        TComponentProps) => JSX.Element;
      return:
        type:
          - '(props: TComponentProps) => JSX.Element'
        description: ''
      parameters:
        - id: Component
          description: 'The unstyled base component to render, which receives styles.'
          type:
            - React.ComponentClass<TComponentProps> | React.StatelessComponent<TComponentProps>
        - id: baseStyles
          description: The styles which should be curried with the component.
          type:
            - 'IStyleFunctionOrObject<TStyleProps, TStyleSet>'
        - id: getProps
          description: A helper which provides default props.
          type:
            - '(props: TComponentProps) => Partial<TComponentProps>'
        - id: customizable
          description: An object which defines which props can be customized using the Customizer.
          type:
            - office-ui-fabric-react.ICustomizableProps
  - uid: office-ui-fabric-react.themeRulesStandardCreator
    name: themeRulesStandardCreator()
    fullName: themeRulesStandardCreator
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function themeRulesStandardCreator(): IThemeRules;'
      return:
        type:
          - office-ui-fabric-react.IThemeRules
        description: ''
  - uid: office-ui-fabric-react.toMatrix
    summary: Convert the given array to a matrix with columnCount number of columns.
    name: 'toMatrix(items, columnCount)'
    fullName: toMatrix
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function toMatrix<T>(items: T[], columnCount: number): T[][];'
      return:
        type:
          - 'T[][]'
        description: A matrix of items
      parameters:
        - id: items
          description: The array to convert
          type:
            - 'T[]'
        - id: columnCount
          description: The number of columns for the resulting matrix
          type:
            - number
  - uid: office-ui-fabric-react.unhoistMethods
    summary: Provides a method for convenience to unhoist hoisted methods.
    name: 'unhoistMethods(source, methodNames)'
    fullName: unhoistMethods
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function unhoistMethods(source: any, methodNames: string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: source
          description: The source object upon which methods were hoisted.
          type:
            - any
        - id: methodNames
          description: An array of method names to unhoist.
          type:
            - 'string[]'
  - uid: office-ui-fabric-react.unregisterIcons
    summary: Unregisters icons by name.
    name: unregisterIcons(iconNames)
    fullName: unregisterIcons
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function unregisterIcons(iconNames: string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: iconNames
          description: List of icons to unregister.
          type:
            - 'string[]'
  - uid: office-ui-fabric-react.updateA
    name: 'updateA(color, a)'
    fullName: updateA
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function updateA(color: IColor, a: number): IColor;'
      return:
        type:
          - office-ui-fabric-react.IColor
        description: ''
      parameters:
        - id: color
          description: ''
          type:
            - office-ui-fabric-react.IColor
        - id: a
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.updateH
    name: 'updateH(color, h)'
    fullName: updateH
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function updateH(color: IColor, h: number): IColor;'
      return:
        type:
          - office-ui-fabric-react.IColor
        description: ''
      parameters:
        - id: color
          description: ''
          type:
            - office-ui-fabric-react.IColor
        - id: h
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.updateSV
    name: 'updateSV(color, s, v)'
    fullName: updateSV
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function updateSV(color: IColor, s: number, v: number): IColor;'
      return:
        type:
          - office-ui-fabric-react.IColor
        description: ''
      parameters:
        - id: color
          description: ''
          type:
            - office-ui-fabric-react.IColor
        - id: s
          description: ''
          type:
            - number
        - id: v
          description: ''
          type:
            - number
  - uid: office-ui-fabric-react.values
    summary: Get all values in an object dictionary
    name: values(obj)
    fullName: values
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function values<T>(obj: any): T[];'
      return:
        type:
          - 'T[]'
        description: ''
      parameters:
        - id: obj
          description: The dictionary to get values for
          type:
            - any
  - uid: office-ui-fabric-react.warn
    summary: 'Sends a warning to console, if the api is present.'
    name: warn(message)
    fullName: warn
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function warn(message: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: message
          description: Warning message.
          type:
            - string
  - uid: office-ui-fabric-react.warnConditionallyRequiredProps
    summary: Warns when props are required if a condition is met.
    name: 'warnConditionallyRequiredProps(componentName, props, requiredProps, conditionalPropName, condition)'
    fullName: warnConditionallyRequiredProps
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export function warnConditionallyRequiredProps<P>(componentName: string, props: P, requiredProps: string[],
        conditionalPropName: string, condition: boolean): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: componentName
          description: The name of the component being used.
          type:
            - string
        - id: props
          description: The props passed into the component.
          type:
            - P
        - id: requiredProps
          description: The name of the props that are required when the condition is met.
          type:
            - 'string[]'
        - id: conditionalPropName
          description: The name of the prop that the condition is based on.
          type:
            - string
        - id: condition
          description: Whether the condition is met.
          type:
            - boolean
  - uid: office-ui-fabric-react.warnDeprecations
    summary: Warns when a deprecated props are being used.
    name: 'warnDeprecations(componentName, props, deprecationMap)'
    fullName: warnDeprecations
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function warnDeprecations<P>(componentName: string, props: P, deprecationMap: ISettingsMap<P>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: componentName
          description: The name of the component being used.
          type:
            - string
        - id: props
          description: The props passed into the component.
          type:
            - P
        - id: deprecationMap
          description: 'The map of deprecations, where key is the prop name and the value is either null or a replacement prop name.'
          type:
            - ISettingsMap<P>
  - uid: office-ui-fabric-react.warnMutuallyExclusive
    summary: Warns when two props which are mutually exclusive are both being used.
    name: 'warnMutuallyExclusive(componentName, props, exclusiveMap)'
    fullName: warnMutuallyExclusive
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export function warnMutuallyExclusive<P>(componentName: string, props: P, exclusiveMap: ISettingsMap<P>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: componentName
          description: The name of the component being used.
          type:
            - string
        - id: props
          description: The props passed into the component.
          type:
            - P
        - id: exclusiveMap
          description: 'A map where the key is a parameter, and the value is the other parameter.'
          type:
            - ISettingsMap<P>
references:
  - uid: office-ui-fabric-react.ActionButton
    name: ActionButton
  - uid: office-ui-fabric-react.ActivityItem
    name: ActivityItem
  - uid: office-ui-fabric-react.Async
    name: Async
  - uid: office-ui-fabric-react.Autofill
    name: Autofill
  - uid: office-ui-fabric-react.AutoScroll
    name: AutoScroll
  - uid: office-ui-fabric-react.BaseAutoFill
    name: BaseAutoFill
  - uid: office-ui-fabric-react.BaseButton
    name: BaseButton
  - uid: office-ui-fabric-react.BaseComponent
    name: BaseComponent
  - uid: office-ui-fabric-react.BaseExtendedPeoplePicker
    name: BaseExtendedPeoplePicker
  - uid: office-ui-fabric-react.BaseExtendedPicker
    name: BaseExtendedPicker
  - uid: office-ui-fabric-react.BaseFloatingPeoplePicker
    name: BaseFloatingPeoplePicker
  - uid: office-ui-fabric-react.BaseFloatingPicker
    name: BaseFloatingPicker
  - uid: office-ui-fabric-react.BasePeoplePicker
    name: BasePeoplePicker
  - uid: office-ui-fabric-react.BasePeopleSelectedItemsList
    name: BasePeopleSelectedItemsList
  - uid: office-ui-fabric-react.BasePicker
    name: BasePicker
  - uid: office-ui-fabric-react.BasePickerListBelow
    name: BasePickerListBelow
  - uid: office-ui-fabric-react.BaseSelectedItemsList
    name: BaseSelectedItemsList
  - uid: office-ui-fabric-react.BaseSlots
    name: BaseSlots
  - uid: office-ui-fabric-react.BreadcrumbBase
    name: BreadcrumbBase
  - uid: office-ui-fabric-react.Button
    name: Button
  - uid: office-ui-fabric-react.ButtonType
    name: ButtonType
  - uid: office-ui-fabric-react.Calendar
    name: Calendar
  - uid: office-ui-fabric-react.Callout
    name: Callout
  - uid: office-ui-fabric-react.CheckBase
    name: CheckBase
  - uid: office-ui-fabric-react.CheckboxBase
    name: CheckboxBase
  - uid: office-ui-fabric-react.CheckboxVisibility
    name: CheckboxVisibility
  - uid: office-ui-fabric-react.ChoiceGroupBase
    name: ChoiceGroupBase
  - uid: office-ui-fabric-react.Coachmark
    name: Coachmark
  - uid: office-ui-fabric-react.CollapseAllVisibility
    name: CollapseAllVisibility
  - uid: office-ui-fabric-react.ColorPickerBase
    name: ColorPickerBase
  - uid: office-ui-fabric-react.ColorPickerGridCellBase
    name: ColorPickerGridCellBase
  - uid: office-ui-fabric-react.ColumnActionsMode
    name: ColumnActionsMode
  - uid: office-ui-fabric-react.ColumnDragEndLocation
    name: ColumnDragEndLocation
  - uid: office-ui-fabric-react.ComboBox
    name: ComboBox
  - uid: office-ui-fabric-react.CommandBarBase
    name: CommandBarBase
  - uid: office-ui-fabric-react.CommandBarButton
    name: CommandBarButton
  - uid: office-ui-fabric-react.CompactPeoplePicker
    name: CompactPeoplePicker
  - uid: office-ui-fabric-react.CompoundButton
    name: CompoundButton
  - uid: office-ui-fabric-react.ConstrainMode
    name: ConstrainMode
  - uid: office-ui-fabric-react.ContextualMenuBase
    name: ContextualMenuBase
  - uid: office-ui-fabric-react.ContextualMenuItemBase
    name: ContextualMenuItemBase
  - uid: office-ui-fabric-react.ContextualMenuItemType
    name: ContextualMenuItemType
  - uid: office-ui-fabric-react.Customizations
    name: Customizations
  - uid: office-ui-fabric-react.Customizer
    name: Customizer
  - uid: office-ui-fabric-react.DatePickerBase
    name: DatePickerBase
  - uid: office-ui-fabric-react.DateRangeType
    name: DateRangeType
  - uid: office-ui-fabric-react.DayOfWeek
    name: DayOfWeek
  - uid: office-ui-fabric-react.DefaultButton
    name: DefaultButton
  - uid: office-ui-fabric-react.DelayedRender
    name: DelayedRender
  - uid: office-ui-fabric-react.DetailsListBase
    name: DetailsListBase
  - uid: office-ui-fabric-react.DetailsListLayoutMode
    name: DetailsListLayoutMode
  - uid: office-ui-fabric-react.DetailsRowBase
    name: DetailsRowBase
  - uid: office-ui-fabric-react.DialogBase
    name: DialogBase
  - uid: office-ui-fabric-react.DialogContentBase
    name: DialogContentBase
  - uid: office-ui-fabric-react.DialogFooterBase
    name: DialogFooterBase
  - uid: office-ui-fabric-react.DialogType
    name: DialogType
  - uid: office-ui-fabric-react.DirectionalHint
    name: DirectionalHint
  - uid: office-ui-fabric-react.DocumentCard
    name: DocumentCard
  - uid: office-ui-fabric-react.DocumentCardActions
    name: DocumentCardActions
  - uid: office-ui-fabric-react.DocumentCardActivity
    name: DocumentCardActivity
  - uid: office-ui-fabric-react.DocumentCardLocation
    name: DocumentCardLocation
  - uid: office-ui-fabric-react.DocumentCardLogo
    name: DocumentCardLogo
  - uid: office-ui-fabric-react.DocumentCardPreview
    name: DocumentCardPreview
  - uid: office-ui-fabric-react.DocumentCardStatus
    name: DocumentCardStatus
  - uid: office-ui-fabric-react.DocumentCardTitle
    name: DocumentCardTitle
  - uid: office-ui-fabric-react.DocumentCardType
    name: DocumentCardType
  - uid: office-ui-fabric-react.DropdownBase
    name: DropdownBase
  - uid: office-ui-fabric-react.DropdownMenuItemType
    name: DropdownMenuItemType
  - uid: office-ui-fabric-react.ElementType
    name: ElementType
  - uid: office-ui-fabric-react.EventGroup
    name: EventGroup
  - uid: office-ui-fabric-react.ExpandingCardBase
    name: ExpandingCardBase
  - uid: office-ui-fabric-react.ExpandingCardMode
    name: ExpandingCardMode
  - uid: office-ui-fabric-react.ExtendedPeoplePicker
    name: ExtendedPeoplePicker
  - uid: office-ui-fabric-react.ExtendedSelectedItem
    name: ExtendedSelectedItem
  - uid: office-ui-fabric-react.FabricBase
    name: FabricBase
  - uid: office-ui-fabric-react.FabricPerformance
    name: FabricPerformance
  - uid: office-ui-fabric-react.FabricSlots
    name: FabricSlots
  - uid: office-ui-fabric-react.FacepileBase
    name: FacepileBase
  - uid: office-ui-fabric-react.FirstWeekOfYear
    name: FirstWeekOfYear
  - uid: office-ui-fabric-react.FloatingPeoplePicker
    name: FloatingPeoplePicker
  - uid: office-ui-fabric-react.FocusTrapZone
    name: FocusTrapZone
  - uid: office-ui-fabric-react.FocusZone
    name: FocusZone
  - uid: office-ui-fabric-react.FocusZoneDirection
    name: FocusZoneDirection
  - uid: office-ui-fabric-react.FocusZoneTabbableElements
    name: FocusZoneTabbableElements
  - uid: office-ui-fabric-react.GlobalSettings
    name: GlobalSettings
  - uid: office-ui-fabric-react.GridCell
    name: GridCell
  - uid: office-ui-fabric-react.GroupedListBase
    name: GroupedListBase
  - uid: office-ui-fabric-react.HoverCardBase
    name: HoverCardBase
  - uid: office-ui-fabric-react.HoverCardType
    name: HoverCardType
  - uid: office-ui-fabric-react.IActivityItemProps
    name: IActivityItemProps
  - uid: office-ui-fabric-react.IActivityItemStyles
    name: IActivityItemStyles
  - uid: office-ui-fabric-react.IAnimationStyles
    name: IAnimationStyles
  - uid: office-ui-fabric-react.IAnimationVariables
    name: IAnimationVariables
  - uid: office-ui-fabric-react.IAsAsyncOptions
    name: IAsAsyncOptions
  - uid: office-ui-fabric-react.IAutofill
    name: IAutofill
  - uid: office-ui-fabric-react.IAutofillProps
    name: IAutofillProps
  - uid: office-ui-fabric-react.IAutofillState
    name: IAutofillState
  - uid: office-ui-fabric-react.IBaseAutoFill
    name: IBaseAutoFill
  - uid: office-ui-fabric-react.IBaseAutoFillProps
    name: IBaseAutoFillProps
  - uid: office-ui-fabric-react.IBaseButtonProps
    name: IBaseButtonProps
  - uid: office-ui-fabric-react.IBaseButtonState
    name: IBaseButtonState
  - uid: office-ui-fabric-react.IBaseExtendedPicker
    name: IBaseExtendedPicker
  - uid: office-ui-fabric-react.IBaseExtendedPickerProps
    name: IBaseExtendedPickerProps
  - uid: office-ui-fabric-react.IBaseExtendedPickerState
    name: IBaseExtendedPickerState
  - uid: office-ui-fabric-react.IBaseFloatingPicker
    name: IBaseFloatingPicker
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps
    name: IBaseFloatingPickerProps
  - uid: office-ui-fabric-react.IBaseFloatingPickerState
    name: IBaseFloatingPickerState
  - uid: office-ui-fabric-react.IBaseFloatingPickerSuggestionProps
    name: IBaseFloatingPickerSuggestionProps
  - uid: office-ui-fabric-react.IBasePicker
    name: IBasePicker
  - uid: office-ui-fabric-react.IBasePickerProps
    name: IBasePickerProps
  - uid: office-ui-fabric-react.IBasePickerState
    name: IBasePickerState
  - uid: office-ui-fabric-react.IBasePickerSuggestionsProps
    name: IBasePickerSuggestionsProps
  - uid: office-ui-fabric-react.IBaseProps
    name: IBaseProps
  - uid: office-ui-fabric-react.IBaseSelectedItemsList
    name: IBaseSelectedItemsList
  - uid: office-ui-fabric-react.IBaseSelectedItemsListProps
    name: IBaseSelectedItemsListProps
  - uid: office-ui-fabric-react.IBaseSelectedItemsListState
    name: IBaseSelectedItemsListState
  - uid: office-ui-fabric-react.IBreadcrumb
    name: IBreadcrumb
  - uid: office-ui-fabric-react.IBreadCrumbData
    name: IBreadCrumbData
  - uid: office-ui-fabric-react.IBreadcrumbItem
    name: IBreadcrumbItem
  - uid: office-ui-fabric-react.IBreadcrumbProps
    name: IBreadcrumbProps
  - uid: office-ui-fabric-react.IBreadcrumbStyleProps
    name: IBreadcrumbStyleProps
  - uid: office-ui-fabric-react.IBreadcrumbStyles
    name: IBreadcrumbStyles
  - uid: office-ui-fabric-react.IButton
    name: IButton
  - uid: office-ui-fabric-react.IButtonProps
    name: IButtonProps
  - uid: office-ui-fabric-react.IButtonStyles
    name: IButtonStyles
  - uid: office-ui-fabric-react.ICalendar
    name: ICalendar
  - uid: office-ui-fabric-react.ICalendarFormatDateCallbacks
    name: ICalendarFormatDateCallbacks
  - uid: office-ui-fabric-react.ICalendarIconStrings
    name: ICalendarIconStrings
  - uid: office-ui-fabric-react.ICalendarProps
    name: ICalendarProps
  - uid: office-ui-fabric-react.ICalendarState
    name: ICalendarState
  - uid: office-ui-fabric-react.ICalendarStrings
    name: ICalendarStrings
  - uid: office-ui-fabric-react.ICallout
    name: ICallout
  - uid: office-ui-fabric-react.ICalloutContentStyleProps
    name: ICalloutContentStyleProps
  - uid: office-ui-fabric-react.ICalloutContentStyles
    name: ICalloutContentStyles
  - uid: office-ui-fabric-react.ICalloutProps
    name: ICalloutProps
  - uid: office-ui-fabric-react.ICellStyleProps
    name: ICellStyleProps
  - uid: office-ui-fabric-react.IChangeDescription
    name: IChangeDescription
  - uid: office-ui-fabric-react.IChangeEventCallback
    name: IChangeEventCallback
  - uid: office-ui-fabric-react.ICheckbox
    name: ICheckbox
  - uid: office-ui-fabric-react.ICheckboxProps
    name: ICheckboxProps
  - uid: office-ui-fabric-react.ICheckboxState
    name: ICheckboxState
  - uid: office-ui-fabric-react.ICheckboxStyleProps
    name: ICheckboxStyleProps
  - uid: office-ui-fabric-react.ICheckboxStyles
    name: ICheckboxStyles
  - uid: office-ui-fabric-react.ICheckProps
    name: ICheckProps
  - uid: office-ui-fabric-react.ICheckStyleProps
    name: ICheckStyleProps
  - uid: office-ui-fabric-react.ICheckStyles
    name: ICheckStyles
  - uid: office-ui-fabric-react.IChoiceGroup
    name: IChoiceGroup
  - uid: office-ui-fabric-react.IChoiceGroupOption
    name: IChoiceGroupOption
  - uid: office-ui-fabric-react.IChoiceGroupOptionProps
    name: IChoiceGroupOptionProps
  - uid: office-ui-fabric-react.IChoiceGroupOptionStyleProps
    name: IChoiceGroupOptionStyleProps
  - uid: office-ui-fabric-react.IChoiceGroupOptionStyles
    name: IChoiceGroupOptionStyles
  - uid: office-ui-fabric-react.IChoiceGroupProps
    name: IChoiceGroupProps
  - uid: office-ui-fabric-react.IChoiceGroupState
    name: IChoiceGroupState
  - uid: office-ui-fabric-react.IChoiceGroupStyleProps
    name: IChoiceGroupStyleProps
  - uid: office-ui-fabric-react.IChoiceGroupStyles
    name: IChoiceGroupStyles
  - uid: office-ui-fabric-react.ICircle
    name: ICircle
  - uid: office-ui-fabric-react.ICoachmark
    name: ICoachmark
  - uid: office-ui-fabric-react.ICoachmarkProps
    name: ICoachmarkProps
  - uid: office-ui-fabric-react.ICoachmarkState
    name: ICoachmarkState
  - uid: office-ui-fabric-react.IColor
    name: IColor
  - uid: office-ui-fabric-react.IColorCellProps
    name: IColorCellProps
  - uid: office-ui-fabric-react.IColorPicker
    name: IColorPicker
  - uid: office-ui-fabric-react.IColorPickerGridCellProps
    name: IColorPickerGridCellProps
  - uid: office-ui-fabric-react.IColorPickerGridCellStyleProps
    name: IColorPickerGridCellStyleProps
  - uid: office-ui-fabric-react.IColorPickerGridCellStyles
    name: IColorPickerGridCellStyles
  - uid: office-ui-fabric-react.IColorPickerProps
    name: IColorPickerProps
  - uid: office-ui-fabric-react.IColorPickerState
    name: IColorPickerState
  - uid: office-ui-fabric-react.IColorPickerStyleProps
    name: IColorPickerStyleProps
  - uid: office-ui-fabric-react.IColorPickerStyles
    name: IColorPickerStyles
  - uid: office-ui-fabric-react.IColorRectangle
    name: IColorRectangle
  - uid: office-ui-fabric-react.IColorRectangleProps
    name: IColorRectangleProps
  - uid: office-ui-fabric-react.IColorRectangleStyleProps
    name: IColorRectangleStyleProps
  - uid: office-ui-fabric-react.IColorRectangleStyles
    name: IColorRectangleStyles
  - uid: office-ui-fabric-react.IColorSlider
    name: IColorSlider
  - uid: office-ui-fabric-react.IColorSliderProps
    name: IColorSliderProps
  - uid: office-ui-fabric-react.IColorSliderStyleProps
    name: IColorSliderStyleProps
  - uid: office-ui-fabric-react.IColorSliderStyles
    name: IColorSliderStyles
  - uid: office-ui-fabric-react.IColumn
    name: IColumn
  - uid: office-ui-fabric-react.IColumnDragDropDetails
    name: IColumnDragDropDetails
  - uid: office-ui-fabric-react.IColumnReorderOptions
    name: IColumnReorderOptions
  - uid: office-ui-fabric-react.IComboBox
    name: IComboBox
  - uid: office-ui-fabric-react.IComboBoxOption
    name: IComboBoxOption
  - uid: office-ui-fabric-react.IComboBoxOptionStyles
    name: IComboBoxOptionStyles
  - uid: office-ui-fabric-react.IComboBoxProps
    name: IComboBoxProps
  - uid: office-ui-fabric-react.IComboBoxState
    name: IComboBoxState
  - uid: office-ui-fabric-react.IComboBoxStyles
    name: IComboBoxStyles
  - uid: office-ui-fabric-react.ICommandBar
    name: ICommandBar
  - uid: office-ui-fabric-react.ICommandBarData
    name: ICommandBarData
  - uid: office-ui-fabric-react.ICommandBarItemProps
    name: ICommandBarItemProps
  - uid: office-ui-fabric-react.ICommandBarProps
    name: ICommandBarProps
  - uid: office-ui-fabric-react.ICommandBarStyleProps
    name: ICommandBarStyleProps
  - uid: office-ui-fabric-react.ICommandBarStyles
    name: ICommandBarStyles
  - uid: office-ui-fabric-react.IconBase
    name: IconBase
  - uid: office-ui-fabric-react.IconButton
    name: IconButton
  - uid: office-ui-fabric-react.IconNames
    name: IconNames
  - uid: office-ui-fabric-react.IContextualMenu
    name: IContextualMenu
  - uid: office-ui-fabric-react.IContextualMenuItem
    name: IContextualMenuItem
  - uid: office-ui-fabric-react.IContextualMenuItemProps
    name: IContextualMenuItemProps
  - uid: office-ui-fabric-react.IContextualMenuItemStyleProps
    name: IContextualMenuItemStyleProps
  - uid: office-ui-fabric-react.IContextualMenuItemStyles
    name: IContextualMenuItemStyles
  - uid: office-ui-fabric-react.IContextualMenuListProps
    name: IContextualMenuListProps
  - uid: office-ui-fabric-react.IContextualMenuProps
    name: IContextualMenuProps
  - uid: office-ui-fabric-react.IContextualMenuRenderItem
    name: IContextualMenuRenderItem
  - uid: office-ui-fabric-react.IContextualMenuSection
    name: IContextualMenuSection
  - uid: office-ui-fabric-react.IContextualMenuState
    name: IContextualMenuState
  - uid: office-ui-fabric-react.IContextualMenuStyleProps
    name: IContextualMenuStyleProps
  - uid: office-ui-fabric-react.IContextualMenuStyles
    name: IContextualMenuStyles
  - uid: office-ui-fabric-react.IContextualMenuSubComponentStyles
    name: IContextualMenuSubComponentStyles
  - uid: office-ui-fabric-react.IconType
    name: IconType
  - uid: office-ui-fabric-react.ICustomizableProps
    name: ICustomizableProps
  - uid: office-ui-fabric-react.ICustomizations
    name: ICustomizations
  - uid: office-ui-fabric-react.ICustomizerContext
    name: ICustomizerContext
  - uid: office-ui-fabric-react.IDatePicker
    name: IDatePicker
  - uid: office-ui-fabric-react.IDatePickerProps
    name: IDatePickerProps
  - uid: office-ui-fabric-react.IDatePickerState
    name: IDatePickerState
  - uid: office-ui-fabric-react.IDatePickerStrings
    name: IDatePickerStrings
  - uid: office-ui-fabric-react.IDatePickerStyleProps
    name: IDatePickerStyleProps
  - uid: office-ui-fabric-react.IDatePickerStyles
    name: IDatePickerStyles
  - uid: office-ui-fabric-react.IDelayedRenderProps
    name: IDelayedRenderProps
  - uid: office-ui-fabric-react.IDetailsFooterBaseProps
    name: IDetailsFooterBaseProps
  - uid: office-ui-fabric-react.IDetailsFooterProps
    name: IDetailsFooterProps
  - uid: office-ui-fabric-react.IDetailsGroupDividerProps
    name: IDetailsGroupDividerProps
  - uid: office-ui-fabric-react.IDetailsGroupRenderProps
    name: IDetailsGroupRenderProps
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps
    name: IDetailsHeaderBaseProps
  - uid: office-ui-fabric-react.IDetailsHeaderProps
    name: IDetailsHeaderProps
  - uid: office-ui-fabric-react.IDetailsItemProps
    name: IDetailsItemProps
  - uid: office-ui-fabric-react.IDetailsList
    name: IDetailsList
  - uid: office-ui-fabric-react.IDetailsListProps
    name: IDetailsListProps
  - uid: office-ui-fabric-react.IDetailsListState
    name: IDetailsListState
  - uid: office-ui-fabric-react.IDetailsListStyles
    name: IDetailsListStyles
  - uid: office-ui-fabric-react.IDetailsRow
    name: IDetailsRow
  - uid: office-ui-fabric-react.IDetailsRowBaseProps
    name: IDetailsRowBaseProps
  - uid: office-ui-fabric-react.IDetailsRowCheckProps
    name: IDetailsRowCheckProps
  - uid: office-ui-fabric-react.IDetailsRowCheckStyles
    name: IDetailsRowCheckStyles
  - uid: office-ui-fabric-react.IDetailsRowProps
    name: IDetailsRowProps
  - uid: office-ui-fabric-react.IDetailsRowSelectionState
    name: IDetailsRowSelectionState
  - uid: office-ui-fabric-react.IDetailsRowState
    name: IDetailsRowState
  - uid: office-ui-fabric-react.IDetailsRowStyles
    name: IDetailsRowStyles
  - uid: office-ui-fabric-react.IDialog
    name: IDialog
  - uid: office-ui-fabric-react.IDialogContent
    name: IDialogContent
  - uid: office-ui-fabric-react.IDialogContentProps
    name: IDialogContentProps
  - uid: office-ui-fabric-react.IDialogContentStyleProps
    name: IDialogContentStyleProps
  - uid: office-ui-fabric-react.IDialogContentStyles
    name: IDialogContentStyles
  - uid: office-ui-fabric-react.IDialogFooter
    name: IDialogFooter
  - uid: office-ui-fabric-react.IDialogFooterProps
    name: IDialogFooterProps
  - uid: office-ui-fabric-react.IDialogFooterStyleProps
    name: IDialogFooterStyleProps
  - uid: office-ui-fabric-react.IDialogFooterStyles
    name: IDialogFooterStyles
  - uid: office-ui-fabric-react.IDialogProps
    name: IDialogProps
  - uid: office-ui-fabric-react.IDialogState
    name: IDialogState
  - uid: office-ui-fabric-react.IDialogStyleProps
    name: IDialogStyleProps
  - uid: office-ui-fabric-react.IDialogStyles
    name: IDialogStyles
  - uid: office-ui-fabric-react.IDisposable
    name: IDisposable
  - uid: office-ui-fabric-react.IDividerAsProps
    name: IDividerAsProps
  - uid: office-ui-fabric-react.IDocumentCard
    name: IDocumentCard
  - uid: office-ui-fabric-react.IDocumentCardActionsProps
    name: IDocumentCardActionsProps
  - uid: office-ui-fabric-react.IDocumentCardActivityPerson
    name: IDocumentCardActivityPerson
  - uid: office-ui-fabric-react.IDocumentCardActivityProps
    name: IDocumentCardActivityProps
  - uid: office-ui-fabric-react.IDocumentCardLocationProps
    name: IDocumentCardLocationProps
  - uid: office-ui-fabric-react.IDocumentCardLogoProps
    name: IDocumentCardLogoProps
  - uid: office-ui-fabric-react.IDocumentCardPreviewImage
    name: IDocumentCardPreviewImage
  - uid: office-ui-fabric-react.IDocumentCardPreviewProps
    name: IDocumentCardPreviewProps
  - uid: office-ui-fabric-react.IDocumentCardProps
    name: IDocumentCardProps
  - uid: office-ui-fabric-react.IDocumentCardStatusProps
    name: IDocumentCardStatusProps
  - uid: office-ui-fabric-react.IDocumentCardTitleProps
    name: IDocumentCardTitleProps
  - uid: office-ui-fabric-react.IDocumentCardTitleState
    name: IDocumentCardTitleState
  - uid: office-ui-fabric-react.IDropdown
    name: IDropdown
  - uid: office-ui-fabric-react.IDropdownInternalProps
    name: IDropdownInternalProps
  - uid: office-ui-fabric-react.IDropdownOption
    name: IDropdownOption
  - uid: office-ui-fabric-react.IDropdownProps
    name: IDropdownProps
  - uid: office-ui-fabric-react.IDropdownState
    name: IDropdownState
  - uid: office-ui-fabric-react.IDropdownStyles
    name: IDropdownStyles
  - uid: office-ui-fabric-react.IDropdownSubComponentStyles
    name: IDropdownSubComponentStyles
  - uid: office-ui-fabric-react.IEntityRect
    name: IEntityRect
  - uid: office-ui-fabric-react.IExpandingCard
    name: IExpandingCard
  - uid: office-ui-fabric-react.IExpandingCardProps
    name: IExpandingCardProps
  - uid: office-ui-fabric-react.IExpandingCardState
    name: IExpandingCardState
  - uid: office-ui-fabric-react.IExpandingCardStyleProps
    name: IExpandingCardStyleProps
  - uid: office-ui-fabric-react.IExpandingCardStyles
    name: IExpandingCardStyles
  - uid: office-ui-fabric-react.IExtendedPeoplePickerProps
    name: IExtendedPeoplePickerProps
  - uid: office-ui-fabric-react.IExtendedPersonaProps
    name: IExtendedPersonaProps
  - uid: office-ui-fabric-react.IFabricProps
    name: IFabricProps
  - uid: office-ui-fabric-react.IFabricStyleProps
    name: IFabricStyleProps
  - uid: office-ui-fabric-react.IFabricStyles
    name: IFabricStyles
  - uid: office-ui-fabric-react.IFacepile
    name: IFacepile
  - uid: office-ui-fabric-react.IFacepilePersona
    name: IFacepilePersona
  - uid: office-ui-fabric-react.IFacepileProps
    name: IFacepileProps
  - uid: office-ui-fabric-react.IFacepileStyleProps
    name: IFacepileStyleProps
  - uid: office-ui-fabric-react.IFacepileStyles
    name: IFacepileStyles
  - uid: office-ui-fabric-react.IFitContentToBoundsOptions
    name: IFitContentToBoundsOptions
  - uid: office-ui-fabric-react.IFocusTrapZone
    name: IFocusTrapZone
  - uid: office-ui-fabric-react.IFocusTrapZoneProps
    name: IFocusTrapZoneProps
  - uid: office-ui-fabric-react.IFocusZone
    name: IFocusZone
  - uid: office-ui-fabric-react.IFocusZoneProps
    name: IFocusZoneProps
  - uid: office-ui-fabric-react.IFontFace
    name: IFontFace
  - uid: office-ui-fabric-react.IFontStyles
    name: IFontStyles
  - uid: office-ui-fabric-react.IGap
    name: IGap
  - uid: office-ui-fabric-react.IGenericItem
    name: IGenericItem
  - uid: office-ui-fabric-react.IGrid
    name: IGrid
  - uid: office-ui-fabric-react.IGridCellProps
    name: IGridCellProps
  - uid: office-ui-fabric-react.IGridProps
    name: IGridProps
  - uid: office-ui-fabric-react.IGridStyleProps
    name: IGridStyleProps
  - uid: office-ui-fabric-react.IGridStyles
    name: IGridStyles
  - uid: office-ui-fabric-react.IGroup
    name: IGroup
  - uid: office-ui-fabric-react.IGroupDividerProps
    name: IGroupDividerProps
  - uid: office-ui-fabric-react.IGroupedList
    name: IGroupedList
  - uid: office-ui-fabric-react.IGroupedListProps
    name: IGroupedListProps
  - uid: office-ui-fabric-react.IGroupedListState
    name: IGroupedListState
  - uid: office-ui-fabric-react.IGroupedListStyles
    name: IGroupedListStyles
  - uid: office-ui-fabric-react.IGroupRenderProps
    name: IGroupRenderProps
  - uid: office-ui-fabric-react.IHoverCard
    name: IHoverCard
  - uid: office-ui-fabric-react.IHoverCardProps
    name: IHoverCardProps
  - uid: office-ui-fabric-react.IHoverCardState
    name: IHoverCardState
  - uid: office-ui-fabric-react.IHoverCardStyleProps
    name: IHoverCardStyleProps
  - uid: office-ui-fabric-react.IHoverCardStyles
    name: IHoverCardStyles
  - uid: office-ui-fabric-react.IHSL
    name: IHSL
  - uid: office-ui-fabric-react.IHSV
    name: IHSV
  - uid: office-ui-fabric-react.IIconOptions
    name: IIconOptions
  - uid: office-ui-fabric-react.IIconProps
    name: IIconProps
  - uid: office-ui-fabric-react.IIconRecord
    name: IIconRecord
  - uid: office-ui-fabric-react.IIconState
    name: IIconState
  - uid: office-ui-fabric-react.IIconStyleProps
    name: IIconStyleProps
  - uid: office-ui-fabric-react.IIconStyles
    name: IIconStyles
  - uid: office-ui-fabric-react.IIconSubset
    name: IIconSubset
  - uid: office-ui-fabric-react.IImage
    name: IImage
  - uid: office-ui-fabric-react.IImageProps
    name: IImageProps
  - uid: office-ui-fabric-react.IImageState
    name: IImageState
  - uid: office-ui-fabric-react.IImageStyleProps
    name: IImageStyleProps
  - uid: office-ui-fabric-react.IImageStyles
    name: IImageStyles
  - uid: office-ui-fabric-react.IInputProps
    name: IInputProps
  - uid: office-ui-fabric-react.IKeytip
    name: IKeytip
  - uid: office-ui-fabric-react.IKeytipLayer
    name: IKeytipLayer
  - uid: office-ui-fabric-react.IKeytipLayerProps
    name: IKeytipLayerProps
  - uid: office-ui-fabric-react.IKeytipLayerState
    name: IKeytipLayerState
  - uid: office-ui-fabric-react.IKeytipLayerStyleProps
    name: IKeytipLayerStyleProps
  - uid: office-ui-fabric-react.IKeytipLayerStyles
    name: IKeytipLayerStyles
  - uid: office-ui-fabric-react.IKeytipProps
    name: IKeytipProps
  - uid: office-ui-fabric-react.IKeytipStyleProps
    name: IKeytipStyleProps
  - uid: office-ui-fabric-react.IKeytipStyles
    name: IKeytipStyles
  - uid: office-ui-fabric-react.ILabel
    name: ILabel
  - uid: office-ui-fabric-react.ILabelProps
    name: ILabelProps
  - uid: office-ui-fabric-react.ILabelStyleProps
    name: ILabelStyleProps
  - uid: office-ui-fabric-react.ILabelStyles
    name: ILabelStyles
  - uid: office-ui-fabric-react.ILayer
    name: ILayer
  - uid: office-ui-fabric-react.ILayerProps
    name: ILayerProps
  - uid: office-ui-fabric-react.ILayerStyleProps
    name: ILayerStyleProps
  - uid: office-ui-fabric-react.ILayerStyles
    name: ILayerStyles
  - uid: office-ui-fabric-react.ILine
    name: ILine
  - uid: office-ui-fabric-react.ILink
    name: ILink
  - uid: office-ui-fabric-react.ILinkHTMLAttributes
    name: ILinkHTMLAttributes
  - uid: office-ui-fabric-react.ILinkProps
    name: ILinkProps
  - uid: office-ui-fabric-react.ILinkStyleProps
    name: ILinkStyleProps
  - uid: office-ui-fabric-react.ILinkStyles
    name: ILinkStyles
  - uid: office-ui-fabric-react.IList
    name: IList
  - uid: office-ui-fabric-react.IListProps
    name: IListProps
  - uid: office-ui-fabric-react.IListState
    name: IListState
  - uid: office-ui-fabric-react.ImageBase
    name: ImageBase
  - uid: office-ui-fabric-react.ImageCoverStyle
    name: ImageCoverStyle
  - uid: office-ui-fabric-react.ImageFit
    name: ImageFit
  - uid: office-ui-fabric-react.ImageLoadState
    name: ImageLoadState
  - uid: office-ui-fabric-react.IMarqueeSelection
    name: IMarqueeSelection
  - uid: office-ui-fabric-react.IMarqueeSelectionProps
    name: IMarqueeSelectionProps
  - uid: office-ui-fabric-react.IMarqueeSelectionStyleProps
    name: IMarqueeSelectionStyleProps
  - uid: office-ui-fabric-react.IMarqueeSelectionStyles
    name: IMarqueeSelectionStyles
  - uid: office-ui-fabric-react.IMaskedTextFieldState
    name: IMaskedTextFieldState
  - uid: office-ui-fabric-react.IMenuItemStyles
    name: IMenuItemStyles
  - uid: office-ui-fabric-react.IMessageBar
    name: IMessageBar
  - uid: office-ui-fabric-react.IMessageBarProps
    name: IMessageBarProps
  - uid: office-ui-fabric-react.IMessageBarState
    name: IMessageBarState
  - uid: office-ui-fabric-react.IMessageBarStyleProps
    name: IMessageBarStyleProps
  - uid: office-ui-fabric-react.IMessageBarStyles
    name: IMessageBarStyles
  - uid: office-ui-fabric-react.IModal
    name: IModal
  - uid: office-ui-fabric-react.IModalProps
    name: IModalProps
  - uid: office-ui-fabric-react.IModalStyles
    name: IModalStyles
  - uid: office-ui-fabric-react.INav
    name: INav
  - uid: office-ui-fabric-react.INavLink
    name: INavLink
  - uid: office-ui-fabric-react.INavLinkGroup
    name: INavLinkGroup
  - uid: office-ui-fabric-react.INavProps
    name: INavProps
  - uid: office-ui-fabric-react.INavState
    name: INavState
  - uid: office-ui-fabric-react.INavStyleProps
    name: INavStyleProps
  - uid: office-ui-fabric-react.INavStyles
    name: INavStyles
  - uid: office-ui-fabric-react.InjectionMode
    name: InjectionMode
  - uid: office-ui-fabric-react.IObjectWithKey
    name: IObjectWithKey
  - uid: office-ui-fabric-react.IOverflowSet
    name: IOverflowSet
  - uid: office-ui-fabric-react.IOverflowSetItemProps
    name: IOverflowSetItemProps
  - uid: office-ui-fabric-react.IOverflowSetProps
    name: IOverflowSetProps
  - uid: office-ui-fabric-react.IOverflowSetStyles
    name: IOverflowSetStyles
  - uid: office-ui-fabric-react.IOverlay
    name: IOverlay
  - uid: office-ui-fabric-react.IOverlayProps
    name: IOverlayProps
  - uid: office-ui-fabric-react.IOverlayStyleProps
    name: IOverlayStyleProps
  - uid: office-ui-fabric-react.IOverlayStyles
    name: IOverlayStyles
  - uid: office-ui-fabric-react.IPage
    name: IPage
  - uid: office-ui-fabric-react.IPageProps
    name: IPageProps
  - uid: office-ui-fabric-react.IPageSpecification
    name: IPageSpecification
  - uid: office-ui-fabric-react.IPalette
    name: IPalette
  - uid: office-ui-fabric-react.IPanel
    name: IPanel
  - uid: office-ui-fabric-react.IPanelHeaderRenderer
    name: IPanelHeaderRenderer
  - uid: office-ui-fabric-react.IPanelProps
    name: IPanelProps
  - uid: office-ui-fabric-react.IPanelStyleProps
    name: IPanelStyleProps
  - uid: office-ui-fabric-react.IPanelStyles
    name: IPanelStyles
  - uid: office-ui-fabric-react.IPeopleFloatingPickerProps
    name: IPeopleFloatingPickerProps
  - uid: office-ui-fabric-react.IPeoplePickerItemProps
    name: IPeoplePickerItemProps
  - uid: office-ui-fabric-react.IPeoplePickerItemState
    name: IPeoplePickerItemState
  - uid: office-ui-fabric-react.IPeoplePickerProps
    name: IPeoplePickerProps
  - uid: office-ui-fabric-react.IPersona
    name: IPersona
  - uid: office-ui-fabric-react.IPersonaCoinProps
    name: IPersonaCoinProps
  - uid: office-ui-fabric-react.IPersonaCoinStyleProps
    name: IPersonaCoinStyleProps
  - uid: office-ui-fabric-react.IPersonaCoinStyles
    name: IPersonaCoinStyles
  - uid: office-ui-fabric-react.IPersonaPresenceProps
    name: IPersonaPresenceProps
  - uid: office-ui-fabric-react.IPersonaPresenceStyleProps
    name: IPersonaPresenceStyleProps
  - uid: office-ui-fabric-react.IPersonaPresenceStyles
    name: IPersonaPresenceStyles
  - uid: office-ui-fabric-react.IPersonaProps
    name: IPersonaProps
  - uid: office-ui-fabric-react.IPersonaSharedProps
    name: IPersonaSharedProps
  - uid: office-ui-fabric-react.IPersonaState
    name: IPersonaState
  - uid: office-ui-fabric-react.IPersonaStyleProps
    name: IPersonaStyleProps
  - uid: office-ui-fabric-react.IPersonaStyles
    name: IPersonaStyles
  - uid: office-ui-fabric-react.IPickerItemProps
    name: IPickerItemProps
  - uid: office-ui-fabric-react.IPivot
    name: IPivot
  - uid: office-ui-fabric-react.IPivotItemProps
    name: IPivotItemProps
  - uid: office-ui-fabric-react.IPivotProps
    name: IPivotProps
  - uid: office-ui-fabric-react.IPivotState
    name: IPivotState
  - uid: office-ui-fabric-react.IPivotStyles
    name: IPivotStyles
  - uid: office-ui-fabric-react.IPlainCard
    name: IPlainCard
  - uid: office-ui-fabric-react.IPlainCardProps
    name: IPlainCardProps
  - uid: office-ui-fabric-react.IPlainCardStyleProps
    name: IPlainCardStyleProps
  - uid: office-ui-fabric-react.IPlainCardStyles
    name: IPlainCardStyles
  - uid: office-ui-fabric-react.IPoint
    name: IPoint
  - uid: office-ui-fabric-react.IPopup
    name: IPopup
  - uid: office-ui-fabric-react.IPopupProps
    name: IPopupProps
  - uid: office-ui-fabric-react.IPopupState
    name: IPopupState
  - uid: office-ui-fabric-react.IPositioningContainer
    name: IPositioningContainer
  - uid: office-ui-fabric-react.IPositioningContainerProps
    name: IPositioningContainerProps
  - uid: office-ui-fabric-react.IPositioningContainerState
    name: IPositioningContainerState
  - uid: office-ui-fabric-react.IProgressIndicator
    name: IProgressIndicator
  - uid: office-ui-fabric-react.IProgressIndicatorProps
    name: IProgressIndicatorProps
  - uid: office-ui-fabric-react.IProgressIndicatorStyleProps
    name: IProgressIndicatorStyleProps
  - uid: office-ui-fabric-react.IProgressIndicatorStyles
    name: IProgressIndicatorStyles
  - uid: office-ui-fabric-react.IPropsWithStyles
    name: IPropsWithStyles
  - uid: office-ui-fabric-react.IRating
    name: IRating
  - uid: office-ui-fabric-react.IRatingProps
    name: IRatingProps
  - uid: office-ui-fabric-react.IRatingState
    name: IRatingState
  - uid: office-ui-fabric-react.IRatingStyleProps
    name: IRatingStyleProps
  - uid: office-ui-fabric-react.IRatingStyles
    name: IRatingStyles
  - uid: office-ui-fabric-react.IRawStyle
    name: IRawStyle
  - uid: office-ui-fabric-react.IRectangle
    name: IRectangle
  - uid: office-ui-fabric-react.IRenderComponent
    name: IRenderComponent
  - uid: office-ui-fabric-react.IRenderFunction
    name: IRenderFunction
  - uid: office-ui-fabric-react.IResizeGroup
    name: IResizeGroup
  - uid: office-ui-fabric-react.IResizeGroupProps
    name: IResizeGroupProps
  - uid: office-ui-fabric-react.IResizeGroupState
    name: IResizeGroupState
  - uid: office-ui-fabric-react.IResizeGroupStyleProps
    name: IResizeGroupStyleProps
  - uid: office-ui-fabric-react.IResizeGroupStyles
    name: IResizeGroupStyles
  - uid: office-ui-fabric-react.IRGB
    name: IRGB
  - uid: office-ui-fabric-react.IScheme
    name: IScheme
  - uid: office-ui-fabric-react.IScrollablePane
    name: IScrollablePane
  - uid: office-ui-fabric-react.IScrollablePaneContext
    name: IScrollablePaneContext
  - uid: office-ui-fabric-react.IScrollablePaneProps
    name: IScrollablePaneProps
  - uid: office-ui-fabric-react.IScrollablePaneState
    name: IScrollablePaneState
  - uid: office-ui-fabric-react.IScrollablePaneStyleProps
    name: IScrollablePaneStyleProps
  - uid: office-ui-fabric-react.IScrollablePaneStyles
    name: IScrollablePaneStyles
  - uid: office-ui-fabric-react.ISearchBox
    name: ISearchBox
  - uid: office-ui-fabric-react.ISearchBoxProps
    name: ISearchBoxProps
  - uid: office-ui-fabric-react.ISearchBoxState
    name: ISearchBoxState
  - uid: office-ui-fabric-react.ISearchBoxStyleProps
    name: ISearchBoxStyleProps
  - uid: office-ui-fabric-react.ISearchBoxStyles
    name: ISearchBoxStyles
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps
    name: ISelectableDroppableTextProps
  - uid: office-ui-fabric-react.ISelectableOption
    name: ISelectableOption
  - uid: office-ui-fabric-react.ISelectedItemProps
    name: ISelectedItemProps
  - uid: office-ui-fabric-react.ISelectedPeopleItemProps
    name: ISelectedPeopleItemProps
  - uid: office-ui-fabric-react.ISelectedPeopleProps
    name: ISelectedPeopleProps
  - uid: office-ui-fabric-react.ISelection
    name: ISelection
  - uid: office-ui-fabric-react.ISelectionOptions
    name: ISelectionOptions
  - uid: office-ui-fabric-react.ISelectionZone
    name: ISelectionZone
  - uid: office-ui-fabric-react.ISelectionZoneProps
    name: ISelectionZoneProps
  - uid: office-ui-fabric-react.ISemanticColors
    name: ISemanticColors
  - uid: office-ui-fabric-react.ISemanticTextColors
    name: ISemanticTextColors
  - uid: office-ui-fabric-react.IShimmer
    name: IShimmer
  - uid: office-ui-fabric-react.IShimmerCircle
    name: IShimmerCircle
  - uid: office-ui-fabric-react.IShimmerCircleProps
    name: IShimmerCircleProps
  - uid: office-ui-fabric-react.IShimmerCircleStyles
    name: IShimmerCircleStyles
  - uid: office-ui-fabric-react.IShimmerElement
    name: IShimmerElement
  - uid: office-ui-fabric-react.IShimmerElementsGroup
    name: IShimmerElementsGroup
  - uid: office-ui-fabric-react.IShimmerElementsGroupProps
    name: IShimmerElementsGroupProps
  - uid: office-ui-fabric-react.IShimmerElementsGroupStyleProps
    name: IShimmerElementsGroupStyleProps
  - uid: office-ui-fabric-react.IShimmerElementsGroupStyles
    name: IShimmerElementsGroupStyles
  - uid: office-ui-fabric-react.IShimmerGap
    name: IShimmerGap
  - uid: office-ui-fabric-react.IShimmerGapProps
    name: IShimmerGapProps
  - uid: office-ui-fabric-react.IShimmerGapStyles
    name: IShimmerGapStyles
  - uid: office-ui-fabric-react.IShimmerLine
    name: IShimmerLine
  - uid: office-ui-fabric-react.IShimmerLineProps
    name: IShimmerLineProps
  - uid: office-ui-fabric-react.IShimmerLineStyles
    name: IShimmerLineStyles
  - uid: office-ui-fabric-react.IShimmerProps
    name: IShimmerProps
  - uid: office-ui-fabric-react.IShimmerState
    name: IShimmerState
  - uid: office-ui-fabric-react.IShimmerStyleProps
    name: IShimmerStyleProps
  - uid: office-ui-fabric-react.IShimmerStyles
    name: IShimmerStyles
  - uid: office-ui-fabric-react.ISize
    name: ISize
  - uid: office-ui-fabric-react.ISlider
    name: ISlider
  - uid: office-ui-fabric-react.ISliderProps
    name: ISliderProps
  - uid: office-ui-fabric-react.ISliderState
    name: ISliderState
  - uid: office-ui-fabric-react.ISliderStyles
    name: ISliderStyles
  - uid: office-ui-fabric-react.ISpinButton
    name: ISpinButton
  - uid: office-ui-fabric-react.ISpinButtonProps
    name: ISpinButtonProps
  - uid: office-ui-fabric-react.ISpinButtonState
    name: ISpinButtonState
  - uid: office-ui-fabric-react.ISpinButtonStyles
    name: ISpinButtonStyles
  - uid: office-ui-fabric-react.ISpinner
    name: ISpinner
  - uid: office-ui-fabric-react.ISpinnerProps
    name: ISpinnerProps
  - uid: office-ui-fabric-react.ISpinnerStyleProps
    name: ISpinnerStyleProps
  - uid: office-ui-fabric-react.ISpinnerStyles
    name: ISpinnerStyles
  - uid: office-ui-fabric-react.IStickyContext
    name: IStickyContext
  - uid: office-ui-fabric-react.IStickyProps
    name: IStickyProps
  - uid: office-ui-fabric-react.IStickyState
    name: IStickyState
  - uid: office-ui-fabric-react.IStyleSheetConfig
    name: IStyleSheetConfig
  - uid: office-ui-fabric-react.ISuggestionItemProps
    name: ISuggestionItemProps
  - uid: office-ui-fabric-react.ISuggestionModel
    name: ISuggestionModel
  - uid: office-ui-fabric-react.ISuggestionsControlProps
    name: ISuggestionsControlProps
  - uid: office-ui-fabric-react.ISuggestionsControlState
    name: ISuggestionsControlState
  - uid: office-ui-fabric-react.ISuggestionsCoreProps
    name: ISuggestionsCoreProps
  - uid: office-ui-fabric-react.ISuggestionsHeaderFooterItemProps
    name: ISuggestionsHeaderFooterItemProps
  - uid: office-ui-fabric-react.ISuggestionsHeaderFooterProps
    name: ISuggestionsHeaderFooterProps
  - uid: office-ui-fabric-react.ISuggestionsProps
    name: ISuggestionsProps
  - uid: office-ui-fabric-react.ISuggestionsState
    name: ISuggestionsState
  - uid: office-ui-fabric-react.ISwatchColorPicker
    name: ISwatchColorPicker
  - uid: office-ui-fabric-react.ISwatchColorPickerProps
    name: ISwatchColorPickerProps
  - uid: office-ui-fabric-react.ISwatchColorPickerState
    name: ISwatchColorPickerState
  - uid: office-ui-fabric-react.ISwatchColorPickerStyleProps
    name: ISwatchColorPickerStyleProps
  - uid: office-ui-fabric-react.ISwatchColorPickerStyles
    name: ISwatchColorPickerStyles
  - uid: office-ui-fabric-react.ITag
    name: ITag
  - uid: office-ui-fabric-react.ITagItemProps
    name: ITagItemProps
  - uid: office-ui-fabric-react.ITagPickerProps
    name: ITagPickerProps
  - uid: office-ui-fabric-react.ITeachingBubble
    name: ITeachingBubble
  - uid: office-ui-fabric-react.ITeachingBubbleProps
    name: ITeachingBubbleProps
  - uid: office-ui-fabric-react.ITeachingBubbleState
    name: ITeachingBubbleState
  - uid: office-ui-fabric-react.ITeachingBubbleStyles
    name: ITeachingBubbleStyles
  - uid: office-ui-fabric-react.ITextField
    name: ITextField
  - uid: office-ui-fabric-react.ITextFieldProps
    name: ITextFieldProps
  - uid: office-ui-fabric-react.ITextFieldState
    name: ITextFieldState
  - uid: office-ui-fabric-react.ITextFieldStyles
    name: ITextFieldStyles
  - uid: office-ui-fabric-react.ITextFieldSubComponentStyles
    name: ITextFieldSubComponentStyles
  - uid: office-ui-fabric-react.ITheme
    name: ITheme
  - uid: office-ui-fabric-react.IThemeRules
    name: IThemeRules
  - uid: office-ui-fabric-react.IThemeSlotRule
    name: IThemeSlotRule
  - uid: office-ui-fabric-react.IToggle
    name: IToggle
  - uid: office-ui-fabric-react.IToggleProps
    name: IToggleProps
  - uid: office-ui-fabric-react.IToggleState
    name: IToggleState
  - uid: office-ui-fabric-react.IToggleStyleProps
    name: IToggleStyleProps
  - uid: office-ui-fabric-react.IToggleStyles
    name: IToggleStyles
  - uid: office-ui-fabric-react.ITooltip
    name: ITooltip
  - uid: office-ui-fabric-react.ITooltipHost
    name: ITooltipHost
  - uid: office-ui-fabric-react.ITooltipHostProps
    name: ITooltipHostProps
  - uid: office-ui-fabric-react.ITooltipHostState
    name: ITooltipHostState
  - uid: office-ui-fabric-react.ITooltipHostStyleProps
    name: ITooltipHostStyleProps
  - uid: office-ui-fabric-react.ITooltipHostStyles
    name: ITooltipHostStyles
  - uid: office-ui-fabric-react.ITooltipProps
    name: ITooltipProps
  - uid: office-ui-fabric-react.ITooltipStyleProps
    name: ITooltipStyleProps
  - uid: office-ui-fabric-react.ITooltipStyles
    name: ITooltipStyles
  - uid: office-ui-fabric-react.IVerticalDividerClassNames
    name: IVerticalDividerClassNames
  - uid: office-ui-fabric-react.IVerticalDividerProps
    name: IVerticalDividerProps
  - uid: office-ui-fabric-react.KeyboardSpinDirection
    name: KeyboardSpinDirection
  - uid: office-ui-fabric-react.KeyCodes
    name: KeyCodes
  - uid: office-ui-fabric-react.Keytip
    name: Keytip
  - uid: office-ui-fabric-react.KeytipData
    name: KeytipData
  - uid: office-ui-fabric-react.KeytipLayerBase
    name: KeytipLayerBase
  - uid: office-ui-fabric-react.LabelBase
    name: LabelBase
  - uid: office-ui-fabric-react.LayerBase
    name: LayerBase
  - uid: office-ui-fabric-react.LayerHost
    name: LayerHost
  - uid: office-ui-fabric-react.LinkBase
    name: LinkBase
  - uid: office-ui-fabric-react.List
    name: List
  - uid: office-ui-fabric-react.ListPeoplePicker
    name: ListPeoplePicker
  - uid: office-ui-fabric-react.MaskedTextField
    name: MaskedTextField
  - uid: office-ui-fabric-react.MemberListPeoplePicker
    name: MemberListPeoplePicker
  - uid: office-ui-fabric-react.MessageBarBase
    name: MessageBarBase
  - uid: office-ui-fabric-react.MessageBarButton
    name: MessageBarButton
  - uid: office-ui-fabric-react.MessageBarType
    name: MessageBarType
  - uid: office-ui-fabric-react.ModalBase
    name: ModalBase
  - uid: office-ui-fabric-react.NavBase
    name: NavBase
  - uid: office-ui-fabric-react.NormalPeoplePicker
    name: NormalPeoplePicker
  - uid: office-ui-fabric-react.OpenCardMode
    name: OpenCardMode
  - uid: office-ui-fabric-react.OverflowButtonType
    name: OverflowButtonType
  - uid: office-ui-fabric-react.OverflowSetBase
    name: OverflowSetBase
  - uid: office-ui-fabric-react.OverlayBase
    name: OverlayBase
  - uid: office-ui-fabric-react.PanelType
    name: PanelType
  - uid: office-ui-fabric-react.PersonaBase
    name: PersonaBase
  - uid: office-ui-fabric-react.PersonaCoinBase
    name: PersonaCoinBase
  - uid: office-ui-fabric-react.PersonaInitialsColor
    name: PersonaInitialsColor
  - uid: office-ui-fabric-react.PersonaPresence
    name: PersonaPresence
  - uid: office-ui-fabric-react.PersonaSize
    name: PersonaSize
  - uid: office-ui-fabric-react.PivotBase
    name: PivotBase
  - uid: office-ui-fabric-react.PivotItem
    name: PivotItem
  - uid: office-ui-fabric-react.PivotLinkFormat
    name: PivotLinkFormat
  - uid: office-ui-fabric-react.PivotLinkSize
    name: PivotLinkSize
  - uid: office-ui-fabric-react.PlainCardBase
    name: PlainCardBase
  - uid: office-ui-fabric-react.Popup
    name: Popup
  - uid: office-ui-fabric-react.PositioningContainer
    name: PositioningContainer
  - uid: office-ui-fabric-react.PrimaryButton
    name: PrimaryButton
  - uid: office-ui-fabric-react.ProgressIndicatorBase
    name: ProgressIndicatorBase
  - uid: office-ui-fabric-react.RatingBase
    name: RatingBase
  - uid: office-ui-fabric-react.RatingSize
    name: RatingSize
  - uid: office-ui-fabric-react.Rectangle
    name: Rectangle
  - uid: office-ui-fabric-react.ResizeGroupBase
    name: ResizeGroupBase
  - uid: office-ui-fabric-react.ScrollablePaneBase
    name: ScrollablePaneBase
  - uid: office-ui-fabric-react.ScrollbarVisibility
    name: ScrollbarVisibility
  - uid: office-ui-fabric-react.ScrollToMode
    name: ScrollToMode
  - uid: office-ui-fabric-react.SearchBoxBase
    name: SearchBoxBase
  - uid: office-ui-fabric-react.SelectableOptionMenuItemType
    name: SelectableOptionMenuItemType
  - uid: office-ui-fabric-react.SelectedPeopleList
    name: SelectedPeopleList
  - uid: office-ui-fabric-react.Selection
    name: Selection
  - uid: office-ui-fabric-react.SelectionDirection
    name: SelectionDirection
  - uid: office-ui-fabric-react.SelectionMode
    name: SelectionMode
  - uid: office-ui-fabric-react.SelectionZone
    name: SelectionZone
  - uid: office-ui-fabric-react.SemanticColorSlots
    name: SemanticColorSlots
  - uid: office-ui-fabric-react.Shade
    name: Shade
  - uid: office-ui-fabric-react.ShimmerBase
    name: ShimmerBase
  - uid: office-ui-fabric-react.ShimmerCircleBase
    name: ShimmerCircleBase
  - uid: office-ui-fabric-react.ShimmeredDetailsListBase
    name: ShimmeredDetailsListBase
  - uid: office-ui-fabric-react.ShimmerElementsDefaultHeights
    name: ShimmerElementsDefaultHeights
  - uid: office-ui-fabric-react.ShimmerElementsGroupBase
    name: ShimmerElementsGroupBase
  - uid: office-ui-fabric-react.ShimmerElementType
    name: ShimmerElementType
  - uid: office-ui-fabric-react.ShimmerGapBase
    name: ShimmerGapBase
  - uid: office-ui-fabric-react.ShimmerLineBase
    name: ShimmerLineBase
  - uid: office-ui-fabric-react.SliderBase
    name: SliderBase
  - uid: office-ui-fabric-react.SpinButton
    name: SpinButton
  - uid: office-ui-fabric-react.SpinnerBase
    name: SpinnerBase
  - uid: office-ui-fabric-react.SpinnerSize
    name: SpinnerSize
  - uid: office-ui-fabric-react.SpinnerType
    name: SpinnerType
  - uid: office-ui-fabric-react.Sticky
    name: Sticky
  - uid: office-ui-fabric-react.StickyPositionType
    name: StickyPositionType
  - uid: office-ui-fabric-react.Stylesheet
    name: Stylesheet
  - uid: office-ui-fabric-react.SuggestionActionType
    name: SuggestionActionType
  - uid: office-ui-fabric-react.SuggestionItemType
    name: SuggestionItemType
  - uid: office-ui-fabric-react.Suggestions
    name: Suggestions
  - uid: office-ui-fabric-react.SuggestionsControl
    name: SuggestionsControl
  - uid: office-ui-fabric-react.SuggestionsController
    name: SuggestionsController
  - uid: office-ui-fabric-react.SuggestionsCore
    name: SuggestionsCore
  - uid: office-ui-fabric-react.SuggestionsHeaderFooterItem
    name: SuggestionsHeaderFooterItem
  - uid: office-ui-fabric-react.SuggestionsItem
    name: SuggestionsItem
  - uid: office-ui-fabric-react.SuggestionsStore
    name: SuggestionsStore
  - uid: office-ui-fabric-react.SwatchColorPickerBase
    name: SwatchColorPickerBase
  - uid: office-ui-fabric-react.TagPicker
    name: TagPicker
  - uid: office-ui-fabric-react.TeachingBubbleBase
    name: TeachingBubbleBase
  - uid: office-ui-fabric-react.TeachingBubbleContentBase
    name: TeachingBubbleContentBase
  - uid: office-ui-fabric-react.TextFieldBase
    name: TextFieldBase
  - uid: office-ui-fabric-react.ThemeGenerator
    name: ThemeGenerator
  - uid: office-ui-fabric-react.ToggleBase
    name: ToggleBase
  - uid: office-ui-fabric-react.TooltipBase
    name: TooltipBase
  - uid: office-ui-fabric-react.TooltipDelay
    name: TooltipDelay
  - uid: office-ui-fabric-react.TooltipHostBase
    name: TooltipHostBase
  - uid: office-ui-fabric-react.TooltipOverflowMode
    name: TooltipOverflowMode
  - uid: office-ui-fabric-react.ValidationState
    name: ValidationState
  - uid: office-ui-fabric-react.ValuePosition
    name: ValuePosition
  - uid: office-ui-fabric-react.VirtualizedComboBox
    name: VirtualizedComboBox
