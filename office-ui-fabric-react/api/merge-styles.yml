### YamlMime:UniversalReference
items:
  - uid: merge-styles
    name: '@uifabric/merge-styles'
    fullName: '@uifabric/merge-styles'
    langs:
      - typeScript
    type: package
    children:
      - merge-styles.concatStyleSets
      - merge-styles.fontFace
      - merge-styles.ICSPSettings
      - merge-styles.IFontFace
      - merge-styles.IRawFontStyle
      - merge-styles.IRawStyle
      - merge-styles.IRawStyleBase
      - merge-styles.IStyleBaseArray
      - merge-styles.IStyleSheetConfig
      - merge-styles.keyframes
      - merge-styles.mergeStyles
      - merge-styles.mergeStyleSets
      - merge-styles.setRTL
      - merge-styles.Stylesheet
  - uid: merge-styles.concatStyleSets
    summary: Combine a set of styles together (but does not register css classes).
    name: concatStyleSets(styleSet)
    fullName: concatStyleSets(styleSet)
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export declare function concatStyleSets<TStyleSet extends IStyleSet<TStyleSet>>(styleSet: TStyleSet | false |
        null | undefined): IConcatenatedStyleSet<TStyleSet>;
      return:
        type:
          - IConcatenatedStyleSet<TStyleSet>
        description: ''
      parameters:
        - id: styleSet
          description: The first style set to be concatenated.
          type:
            - TStyleSet | false | null | undefined
  - uid: merge-styles.fontFace
    summary: Registers a font face.
    name: fontFace(font)
    fullName: fontFace(font)
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export declare function fontFace(font: IFontFace): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: font
          description: ''
          type:
            - merge-styles.IFontFace
  - uid: merge-styles.keyframes
    summary: Registers keyframe definitions.
    name: keyframes(timeline)
    fullName: keyframes(timeline)
    langs:
      - typeScript
    type: function
    syntax:
      content: |-
        export declare function keyframes(timeline: {
            [key: string]: {};
        }): string;
      return:
        type:
          - string
        description: ''
      parameters:
        - id: timeline
          description: ''
          type:
            - |-
              {
                  [key: string]: {};
              }
  - uid: merge-styles.mergeStyles
    summary: 'Concatination helper, which can merge class names together. Skips over falsey values.'
    name: mergeStyles(args)
    fullName: mergeStyles(args)
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export declare function mergeStyles(...args: (IStyle | IStyleBaseArray | false | null | undefined)[]): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: args
          description: ''
          type:
            - '(IStyle | IStyleBaseArray | false | null | undefined)[]'
  - uid: merge-styles.mergeStyleSets
    summary: >-
      Takes in one or more style set objects, each consisting of a set of areas, each which will produce a class name.
      Using this is analogous to calling `mergeStyles` for each property in the object, but ensures we maintain the set
      ordering when multiple style sets are merged.
    name: mergeStyleSets(styleSet)
    fullName: mergeStyleSets(styleSet)
    langs:
      - typeScript
    type: function
    syntax:
      content: >-
        export declare function mergeStyleSets<TStyleSet extends IStyleSet<TStyleSet>>(styleSet: TStyleSet | false |
        null | undefined): IProcessedStyleSet<TStyleSet>;
      return:
        type:
          - IProcessedStyleSet<TStyleSet>
        description: ''
      parameters:
        - id: styleSet
          description: The first style set to be merged and reigstered.
          type:
            - TStyleSet | false | null | undefined
  - uid: merge-styles.setRTL
    summary: Sets the current RTL value.
    name: setRTL(isRTL)
    fullName: setRTL(isRTL)
    langs:
      - typeScript
    type: function
    syntax:
      content: 'export declare function setRTL(isRTL: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: isRTL
          description: ''
          type:
            - boolean
references:
  - uid: merge-styles.ICSPSettings
    name: ICSPSettings
  - uid: merge-styles.IFontFace
    name: IFontFace
  - uid: merge-styles.IRawFontStyle
    name: IRawFontStyle
  - uid: merge-styles.IRawStyle
    name: IRawStyle
  - uid: merge-styles.IRawStyleBase
    name: IRawStyleBase
  - uid: merge-styles.IStyleBaseArray
    name: IStyleBaseArray
  - uid: merge-styles.IStyleSheetConfig
    name: IStyleSheetConfig
  - uid: merge-styles.Stylesheet
    name: Stylesheet
